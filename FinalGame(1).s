	@ Fly the spaceship and gain points by attacking the alien saucer.
	@ Take damage if the alien touches the ship.
	
	@ Advanced features implemented:
		// 1) Special Visual Effect - each time the alien is shot,
		//    it becomes more damaged until it is killed.
		
		// 2) Powerups - Can move at 3x speed for a short duration
		//	  while activated.
		
		// 3) Complex Scoring System - +100 points for shooting the alien,
		//    +250 points for killing the alien, +X points each time the
		//    game loop runs (based on how many times the alien has been 
		//	  killed / the current difficulty, -10 points for taking damage.
		
		// 4) Multiple In-Flight Projectiles - Shoot lasers to kill the 
		//	  alien.
		
	@ Controls: WASD to move the spaceship, spacebar to shoot the laser,
		//     M key to activate the powerup (only when "Speed Boost Ready"
		//	    is shown on the screen.
		
	@ YouTube link: https://www.youtube.com/watch?v=FlyvXtICWnc 

// Important Addresses
.EQU PIX_BUFFER, 0xc8000000
.EQU TEXT_BUFFER, 0xc9000000
.EQU CHARBUF, 0xc9000000
.EQU BUFFER_REGISTER, 0xFF203020
.EQU BACKBUFFER_REGISTER, 0xFF203024
.EQU STATUS_REGISTER, 0xFF20302C
.EQU BUTTON_REGISTER, 0xFF200050
.EQU SPRITE_LOCATION_A, 0x12341234
.EQU SPRITE_LOCATION_B, 0x20000000
.EQU SPRITE_LOCATION_C, 0x20010000
.EQU ALIEN_COLLISION_REGISTER, 0xc1000000
.EQU COLLISION_BUFFER, 0xc1000004
.EQU LIFE_BUFFER, 0xc1000008
.EQU SCORE_BUFFER, 0xc100000c
.EQU SPRITE_B_VELOCITY, 0xc1000010
.EQU LASER_STATUS_REGISTER, 0xc1000014
.EQU SHIP_DIRECTION_REGISTER, 0xc1000018
.EQU ALIEN_ANIMATION_OFFSET, 0xc2100000
.EQU ALIEN_ANIMATION_BUFFER, 0xc2100004
.EQU KEYBOARD_REGISTER, 0xff200100
.EQU KEYBOARD_VALUE, 0xc100001c
.EQU LAST_KB_VALUE, 0xc1000020
.EQU PowerUpReadyRegister, 0xc1000024
.EQU PowerUpUseRegister, 0xc1000028
.EQU PowerUpTimer, 0xc100002c
.EQU PowerUpRechargeTimer, 0xc1000030


// Useful defines
.EQU PIXMAP_WIDTH, 0
.EQU PIXMAP_HEIGHT, 2
.EQU PIXMAP_TRANSPARENCY, 4
.EQU PIXMAP_PIXELDATA, 6

.EQU SPRITE_PIXMAP, 0
.EQU SPRITE_X, 4 
.EQU SPRITE_Y, 8
.EQU SPRITE_X_VEL, 12
.EQU SPRITE_Y_VEL, 16
.EQU SPRITE_WIDTH, 20
.EQU SPRITE_HEIGHT, 24
.EQU ALTERNATE_PIXMAP, 28
.EQU OPPOSITE_DIRECTION_SPRITE, 32
.EQU PRINTED_SPRITE, 36

.global _start
_start:
	
	// Inital stack
	mov sp, #0x800000
	
	// chase velocity should be one initially
	mov r1, #1
	ldr r2, =SPRITE_B_VELOCITY
	ldr r3, =PowerUpReadyRegister
	str r1, [r2]
	str r1, [r3]
	
	// makes the laser shoot in the right direction (initial condition)
	mov r1, #-1
	ldr r3, =SHIP_DIRECTION_REGISTER
	str r1, [r3]

	
	// initialize buffers
	mov r1, #0
	ldr r2, =ALIEN_COLLISION_REGISTER
	ldr r3, =COLLISION_BUFFER
	ldr r4, =LASER_STATUS_REGISTER
	ldr r5, =PowerUpUseRegister
	str r1, [r2]
	str r1, [r3]
	str r1, [r4]
	str r1, [r5]
	
	// itialize damage animation (offset zero is undamaged)
	mov r1, #0
	ldr r5, =ALIEN_ANIMATION_OFFSET
	str r1, [r5]
	
	// Put values needed for chaser sprite into memory
	ldr r0, =SPRITE_LOCATION_B
	ldr r1, =Alien
	mov r2, #80
	mov r3, #100
	bl InitSprite
	
	// Put values needed for mario sprite into memory
	ldr r0, =SPRITE_LOCATION_A
	ldr r1, =Ship
	mov r2, #220
	mov r3, #0
	bl InitSprite
	
	// Put values needed for laser sprite into memory
	ldr r0, =SPRITE_LOCATION_C
	ldr r1, =Laser
	mov r2, #220
	mov r3, #0
	bl InitSprite
	
	// put alien breaking animation into memory so that it can be accessed later
	bl InitAnimation
	
	// initialize life
	mov r0, #25
	ldr r1, =LIFE_BUFFER
	str r0, [r1]
	
	// initialize score
	mov r0, #1
	ldr r1, =SCORE_BUFFER
	str r0, [r1]
	
	//Double Buffer Stuff
	ldr r5, =0xc2000000 // holds the second buffer
	ldr r4, =BACKBUFFER_REGISTER
	str r5, [r4]
	
	// store important stuff for double buffering
	ldr r3, =PIX_BUFFER
	ldr r6, =STATUS_REGISTER
	ldr r7, =BUFFER_REGISTER
	
	// reset text stuff
	bl ClearTextBuffer

inf_loop:
	
	// Check what keys the user is requesting
	bl ReadKeyboard

	// check game over
	bl GameOver

	// Reset screen
	ldr r0, =0x0010
	bl ClearVGA
	
	// Reset text buffer
	bl ClearTextBuffer
	
	bl PowerUp
	
	// show current life (string)
	 mov r0, #1
	 mov r1, #1
	 ldr r2, =life_string
	 bl DrawStr
	
	 // show current life (number)
	 mov r0, #9
	 mov r1, #1
	 ldr r2, =LIFE_BUFFER
	 ldr r2, [r2]
	 bl DrawNum
	 
	 // show current score
	 mov r0, #75
	 mov r1, #1
	 ldr r2, =SCORE_BUFFER
	 ldr r2, [r2]
	 bl DrawNum
	 
	// draw stars
	bl DrawStars
	
	// Only draw the laser if the spacebar has been pressed
	ldr r2, =LASER_STATUS_REGISTER
	ldr r2, [r2]
	cmp r2, #1
	// Load sprite (laser)
	ldr r8, =SPRITE_LOCATION_C
	ldr r0, [r8, #SPRITE_PIXMAP]
	ldr r1, [r8, #SPRITE_X]
	ldr r2, [r8, #SPRITE_Y]
	bleq BlitBlit
	
	// Load sprite (chaser)
	ldr r8, =SPRITE_LOCATION_B
	ldr r0, [r8, #SPRITE_PIXMAP]
	ldr r1, [r8, #SPRITE_X]
	ldr r2, [r8, #SPRITE_Y]
	bl BlitBlit

	// Load sprite (mario)
	ldr r8, =SPRITE_LOCATION_A
	ldr r0, [r8, #PRINTED_SPRITE]
	ldr r1, [r8, #SPRITE_X]
	ldr r2, [r8, #SPRITE_Y]
	bl BlitBlit
	
	// check for button presses, update sprite accordingly
	ldr r0, =SPRITE_LOCATION_A
	ldr r1, =SPRITE_LOCATION_B
	bl UpdateVelocity
	
	// update sprite B's velocity so that it follows sprite A 
	ldr r0, =SPRITE_LOCATION_A
	ldr r1, =SPRITE_LOCATION_B
	bl Chase
	
	// Update laser
	bl ShootLasers
	
	// Check if the laser hit the alien
	ldr r0, =SPRITE_LOCATION_B
	ldr r1, =SPRITE_LOCATION_C
	bl CheckLaserHit
	
	// change the sprite if the alien is hit
	bl AlienHit
	
	ldr r0, =SPRITE_LOCATION_B
	ldr r1, =ALIEN_COLLISION_REGISTER
	bl SwapSpriteOnCollision
	
	// redraw sprite at new location by (x,y) + velocity
	ldr r0, =SPRITE_LOCATION_A
	bl Animate
	
	// redraw sprite at new location by (x,y) + velocity
	ldr r0, =SPRITE_LOCATION_B
	bl Animate
	
	// check to see if the sprites have collided
	ldr r0, =SPRITE_LOCATION_A
	ldr r1, =SPRITE_LOCATION_B
	bl CollisionDetection
	
	// if there is a collision, swap sprites. also decrements life on collision
	ldr r0, =SPRITE_LOCATION_A
	ldr r1, =COLLISION_BUFFER
	bl SwapSpriteOnCollision
	
	// increment score
	bl UpdateScore
	
	// Write 1 to the buffer register (double buff stuff)
	mov r0, #1
	str r0, [r7]
		
DoubleBuff:
	// Poll status register to see if it is equal to one
	ldr r8, [r6]
	and r8, #1
	cmp r8, #1
	beq DoubleBuff
	
	str r3, [r4] // change what is pointed to in the back buffer
	
	mov r9, r5 
	
	//swap!
	mov r5, r3
	mov r3, r9

	b inf_loop

	// You can use this small simple data to test your BitBlit routine
	// It should draw a small brown rectangle (transparent in the middle)
.align 2

############################################################################

CheckLaserHit:
	push {r4, r5, r6, r7, r8, r9, r10, r11, r12, lr}
	
	ldr r10, =ALIEN_COLLISION_REGISTER
	mov r11, #0
	
	ldr r0, =SPRITE_LOCATION_C
	ldr r1, =SPRITE_LOCATION_B
	
	ldr r4, [r0, #SPRITE_X]
	ldr r5, [r0, #SPRITE_WIDTH]
	
	ldr r6, [r1, #SPRITE_X]
	ldr r7, [r1, #SPRITE_WIDTH]
	
	add r8, r4, r5 // r8 stores the left edge (x value) of sprite A
	add r9, r6, r7 // r9 stores the left edge (x value) of sprite B
	
	cmp r4, r9
	bgt NoLaserHit
	cmp r8, r6
	blt NoLaserHit
	
	ldr r4, [r0, #SPRITE_Y]
	ldr r5, [r0, #SPRITE_HEIGHT]
	
	ldr r6, [r1, #SPRITE_Y]
	ldr r7, [r1, #SPRITE_HEIGHT]
	
	add r8, r4, r5 // r8 stores the bottom edge (y value) of sprite A
	add r9, r6, r7 // r9 stores the bottom edge (y value) of sprite B
	
	cmp r4, r9
	bgt NoLaserHit
	cmp r8, r6
	blt NoLaserHit
	
	mov r11, #1
	
	NoLaserHit:
	
	str r11, [r10]
	
	pop {r4, r5, r6, r7, r8, r9, r10, r11, r12, pc}
############################################################################
AlienHit:
	push {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
	
	ldr r4, =ALIEN_COLLISION_REGISTER // get the value in the register
	ldr r5, [r4]
	cmp r5, #1						  // if the register isnt 1, the laser didnt hit
	bne NoHit
	
	ldr r6, =SCORE_BUFFER
	ldr r11, [r6]
	add r11, r11, #100				// add 100 points for shooting the alien
	
	ldr r8, =ALIEN_ANIMATION_OFFSET  // what frame are we on?
	ldr r9, [r8]
	
	ldr r5, =SPRITE_LOCATION_B
	ldr r3, =ALIEN_ANIMATION_BUFFER
	
	add r9, r9, #4 //. check to see if we have gone beyond the memory allocated for the animation
	cmp r9, #20
	moveq r9, #0
	
	ldr r7, [r3, r9]
	str r7, [r5, #SPRITE_PIXMAP] // store the frame at the pixmap location
	
	str r9, [r8]
	
	bleq ResetAlien				// move the alien to a new (x,y)
	bleq IncreaseChaseSpeed		// alien killed! increase difficulty
	addeq r11, r11, #500		// bonus 500 points on alien death
	
	str r11, [r6]				// store new score back in the register
	
	ldr r10, =LASER_STATUS_REGISTER // reset the laser
	mov r11, #0
	str r11, [r10]
	
	
	NoHit:
	pop {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
	
############################################################################
ResetAlien:
	push {r4, r5, r6, lr}
	
	ldr r4, =SPRITE_LOCATION_B 
	
	ldr r5, =0
	ldr r6, =0
	str r5, [r4, #SPRITE_X]	// move the alien to a new (x,y) when it dies
	str r6, [r4, #SPRITE_Y]
	
	pop {r4, r5, r6, pc}
	
############################################################################
ShootLasers:
	push {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
	
	ldr r3, =LASER_STATUS_REGISTER
	ldr r3, [r3]
	cmp r3, #1
	
	beq MoveLaser
	
	// This section of code runs if the laser hits the edge of the screen.
	// It then needs to be reset
	
	// laser velocity is twice the velocity of sprite A
	ldr r4, =SPRITE_LOCATION_A
	ldr r5, =SPRITE_LOCATION_C
	
	ldr r6, [r4, #SPRITE_X_VEL]
	add r6, r6, r6
	
	cmp r6, #0
	beq FindLaserDirection
	LaserReturn:
	str r6, [r5, #SPRITE_X_VEL]
	
	// lasers should start at sprite A (x,y + height/2) and move in the direction
	// of the velocity of sprite A
	
	// move the laser far off screen when its not being shot
	mov r8, #512
	mov r7, #512
	
	str r8, [r5, #SPRITE_X]
	str r7, [r5, #SPRITE_Y]
	
	// this code block is the reset state, so we now need to reset the state
	
	// check the keyboard register and see if the user is pressing spacebar
	ldr r3, =LASER_STATUS_REGISTER
	mov r10, #0
	
	ldr r9, =KEYBOARD_VALUE
	ldr r7, [r9]
	
	ldr r8, =0x29
	cmp r7, r8 // spacebar -- shoot laser if pressed
	moveq r10, #1
	
	str r10, [r3]
	
	bne EndLaser
	
	ldr r8, [r4, #SPRITE_X]
	ldr r7, [r4, #SPRITE_Y]
	add r7, r7, #11
	add r8, r8, #12
	
	add r8, r8, r6
	
	str r8, [r5, #SPRITE_X]
	str r7, [r5, #SPRITE_Y]
	
EndLaser:
	pop {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}

MoveLaser:
	//move laser in the direction of the velocity
	ldr r5, =SPRITE_LOCATION_C
	ldr r6, [r5, #SPRITE_X]
	ldr r7, [r5, #SPRITE_X_VEL]
	add r6, r6, r7
	str r6, [r5, #SPRITE_X]
	
	ldr r7, =LASER_STATUS_REGISTER
	
	// check boundary and reset conditions
	cmp r6, #320
	movge r3, #0
	cmp r6, #0
	movlt r3, #0
	
	str r3, [r7]
	
	b EndLaser
	
############################################################################
FindLaserDirection:
	
	// The laser should always shoot out of the front of the ship
	ldr r11, =SHIP_DIRECTION_REGISTER
	ldr r7, [r11]
	cmp r7, #0
	movgt r6, #10
	movlt r6, #-10 
	
	b LaserReturn
############################################################################

IncreaseChaseSpeed:
	push {r4, r5, r6, lr}
	
	ldr r4, =SPRITE_B_VELOCITY
	ldr r5, [r4]					// get curr velocity

	b LevelUp
	
DifficultyReturn:
	
	str r5, [r4]
	
	pop {r4, r5, r6, pc}
	
LevelUp:
	add r5, r5, #1
	
	ldr r6, =40000 // makes the game freeze so you can read the string?
	
	LevelUpHere:
	mov r0, #27
	mov r1, #29
	ldr r2, =difficulty_string // "Difficulty Increasing"
	
	bl DrawStr
	
	sub r6, r6, #1
	cmp r6, #0
	bne LevelUpHere // freeze loop
	
	b DifficultyReturn
	
############################################################################
InitAnimation:
	push {r4, r5, r6, lr}
	
	// Puts all of the frames into successive registers
	ldr r4, =ALIEN_ANIMATION_BUFFER
	
	ldr r5, =Alien
	str r5, [r4]
	
	ldr r5, =BrokenAlien1
	str r5, [r4, #4]
	
	ldr r5, =BrokenAlien2
	str r5, [r4, #8]
	
	ldr r5, =BrokenAlien3
	str r5, [r4, #12]
	
	ldr r5, =BrokenAlien4
	str r5, [r4, #16]
	
	pop {r4, r5, r6, pc}
	
############################################################################

InitSprite:
	push {r4,r5, r6,lr}
	mov r4, r0
	str r1, [r4, #SPRITE_PIXMAP] 	// Pixmap
	str r1, [r4, #PRINTED_SPRITE]   
	
	str r2, [r4, #SPRITE_X]	// X
	str r3, [r4, #SPRITE_Y]	// Y
	
	mov r0, #0 // initial velocity should be zero
	str r0, [r4, #SPRITE_X_VEL] // x velocity
	str r0, [r4, #SPRITE_Y_VEL] // y velocity
	
	ldr r5, [r4, #SPRITE_PIXMAP]
	ldrh r5, [r5]
	str r5, [r4, #SPRITE_WIDTH] // width of the pixmap (used to ensure the sprite stays in bounds)
	
	ldr r5, [r4, #SPRITE_PIXMAP]
	ldrh r5, [r5, #2]
	str r5, [r4, #SPRITE_HEIGHT] //pixmap height (used to ensure the sprite stays in bounds)
	
	ldr r6, =Fire
	str r6, [r4, #ALTERNATE_PIXMAP] // collision sprite
	
	ldr r2, =ReverseShip
	str r2, [r4, #OPPOSITE_DIRECTION_SPRITE]  // flip direction of ship when x vel changes signs
	
	pop {r4, r5, r6, pc}
	
############################################################################

GameOver:
	push {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}

	ldr r10, =LIFE_BUFFER
	ldr r11, [r10]			// get curr life
	
	cmp r11, #0
	beq GameOverLoop		// if life == 0, end game
	
	pop {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
	
	GameOverLoop:
	ldr r0, =0xf000
	bl ClearVGA
	
	// had to copy paste double buffer stuff to display end screen in this loop
	
	// store important stuff for double buffering
	ldr r3, =PIX_BUFFER
	ldr r6, =STATUS_REGISTER
	ldr r7, =BUFFER_REGISTER
	
	// Write 1 to the buffer register (double buff stuff)
	mov r0, #1
	str r0, [r7]
	
	EndDoubleBuff:
	// Poll status register to see if it is equal to one
	ldr r8, [r6]
	and r8, #1
	cmp r8, #1
	beq EndDoubleBuff
	
	str r3, [r4] // change what is pointed to in the back buffer
	
	bl ClearTextBuffer
	
	// Display final score
	mov r0, #24
	mov r1, #27
	ldr r2, =game_over_string
	bl DrawStr
	
	mov r0, #49
	mov r1, #27
	ldr r2, =SCORE_BUFFER
	ldr r2, [r2]
	bl DrawNum
	
	// display message
	mov r0, #27
	mov r1, #29
	ldr r2, =reset_string
	bl DrawStr

	EndlessLoop:	// never ending
	b EndlessLoop
	
############################################################################

UpdateScore:

	// add 1 point each cycle
	push {r4, r5, r6, lr}
	
	ldr r4, =SCORE_BUFFER
	ldr r5, [r4]
	
	ldr r6, =SPRITE_B_VELOCITY
	ldr r6, [r6]
	
	add r5, r5, r6
	str r5, [r4]
	
	pop {r4, r5, r6, pc}

############################################################################

Chase:
	// makes the alien move towards the ship
	push {r4, r5, r6, r7, r8, lr}
	
	ldr r7, =SPRITE_B_VELOCITY
	ldr r7, [r7]
	mvn r8, r7
	
	// X component tracking
	ldr r4, [r0, #SPRITE_X]
	ldr r5, [r1, #SPRITE_X]
	
	cmp r5, r4
	movlt r6, r7
	movgt r6, r8
	moveq r6, #0
	
	str r6, [r1, #SPRITE_X_VEL]
	
	// Y component tracking
	ldr r4, [r0, #SPRITE_Y]
	ldr r5, [r1, #SPRITE_Y]
	
	cmp r5, r4
	movlt r6, r7
	movgt r6, r8
	moveq r6, #0
	
	str r6, [r1, #SPRITE_Y_VEL]
	
	pop {r4, r5, r6, r7, r8, pc}
	
############################################################################
	
SwapSpriteOnCollision:

	push {r4, r5, r6, r7, r8, lr}
	
	mov r8, r1
	
	// is the status buffer indicating that a swap is needed?
	ldr r5, [r8]
	cmp r5, #0
	beq NoCollision
	
	// swap sprites
	ldr r6, [r0, #ALTERNATE_PIXMAP]
	str r6, [r0, #PRINTED_SPRITE]
	
	SwapSpriteOnCollisionBack:
	pop {r4, r5, r6, r7, r8, pc}
	
	NoCollision:
	ldr r6, [r0, #SPRITE_PIXMAP]
	str r6, [r0, #PRINTED_SPRITE]
	b SwapSpriteOnCollisionBack

############################################################################
	
CollisionDetection:
	// Takes two memory locations of pixmaps as arguments
	// Checks if there is any overlap between the two sprites
	push {r4, r5, r6, r7, r8, r9, r10, r11, r12, lr}
	
	ldr r10, =COLLISION_BUFFER
	mov r11, #0
	
	ldr r4, [r0, #SPRITE_X]
	ldr r5, [r0, #SPRITE_WIDTH]
	
	ldr r6, [r1, #SPRITE_X]
	ldr r7, [r1, #SPRITE_WIDTH]
	
	add r8, r4, r5 // r8 stores the left edge (x value) of sprite A
	add r9, r6, r7 // r9 stores the left edge (x value) of sprite B
	
	cmp r4, r9
	bgt SkipCollide
	cmp r8, r6
	blt SkipCollide
	
	ldr r4, [r0, #SPRITE_Y]
	ldr r5, [r0, #SPRITE_HEIGHT]
	
	ldr r6, [r1, #SPRITE_Y]
	ldr r7, [r1, #SPRITE_HEIGHT]
	
	add r8, r4, r5 // r8 stores the bottom edge (y value) of sprite A
	add r9, r6, r7 // r9 stores the bottom edge (y value) of sprite B
	
	cmp r4, r9
	bgt SkipCollide
	cmp r8, r6
	blt SkipCollide
	
	// at this point, we have a collision
	mov r11, #1
	
	// Decrement life
	ldr r4, =LIFE_BUFFER
	ldr r5, [r4]
	sub r5, r5, #1
	str r5, [r4]
	
	// subtract 10 points on taking damage
	ldr r4, =SCORE_BUFFER
	ldr r5, [r4]
	sub r5, r5, #10
	cmp r5, #0	// no negative scores!
	movlt r5, #0
	str r5, [r4]
	
	SkipCollide:
	
	// update collision buffer
	str r11, [r10]
	
	pop {r4, r5, r6, r7, r8, r9, r10, r11, r12, pc}
	
############################################################################
	
// Update x and y velocity of a given sprite (r0)
UpdateVelocity:
	push {r3, r4, r5, r6, r7, r8, r9, r10, r12, lr}
	
	ldr r9, =KEYBOARD_VALUE
	ldr r7, [r9]
	
	ldr r10, [r0, #SPRITE_X_VEL]
	ldr r12, [r0, #SPRITE_Y_VEL]
	
	mov r6, #5 // set the speed
	
		
	ldr r3, =PowerUpReadyRegister
	ldr r3, [r3]
	cmp r3, #2
	moveq r3, #3
	muleq r6, r6, r3
	
	cmp r7, #0x1c // A key - move left
	mvneq r10, r6
	cmp r7, #0x23 // D key - move right
	moveq r10, r6
	cmp r7, #0x1d // W key - move up
	mvneq r12, r6
	cmp r7, #0x1b // S key - move down
	moveq r12, r6
	
	
	// Store updated velocities back in memory
	str r12, [r0, #SPRITE_Y_VEL]
	str r10, [r0, #SPRITE_X_VEL]
	
	cmp r10, #0
	blgt MoveRight
	bllt MoveLeft

NoVelChange:
	pop {r3, r4, r5, r6, r7, r8, r9, r10, r12, pc}
	
############################################################################
MoveLeft:
	// updates the direction register for when the ship moves left
	push {r4, r5, r6, lr}
	
	ldr r4, =Ship
	ldr r5, =SPRITE_LOCATION_A
	str r4, [r5, #SPRITE_PIXMAP]
	
	ldr r6, =SHIP_DIRECTION_REGISTER
	mov r4, #-1
	str r4, [r6]
	
	pop {r4, r5, r6, pc}
	
############################################################################
MoveRight:
	// updates the direction register for when the ship moves right
	push {r4, r5, r6, lr}
	
	ldr r4, =ReverseShip
	ldr r5, =SPRITE_LOCATION_A
	str r4, [r5, #SPRITE_PIXMAP]
	
	ldr r6, =SHIP_DIRECTION_REGISTER
	mov r4, #1
	str r4, [r6]
	
	pop {r4, r5, r6, pc}
############################################################################	

Animate:
	// basically just adds the velocity to the position for both x and y
	// also checks border conditions so the sprite doesnt go off screen
	push {r4, r5, r6, r7, r8, r9, lr}
	
	mov r7, r0
	
	ldr r8, [r7, #SPRITE_WIDTH]
	rsb r8, r8, #320
	
	ldr r9, [r7, #SPRITE_HEIGHT]
	rsb r9, r9, #240
	
	// Update X based on x vel
	ldr r4, [r7, #SPRITE_X_VEL]
	ldr r5, [r7, #SPRITE_X]
	adds r6, r5, r4
	movmi r6, #0 // less than zero condition
	cmp r6, r8
	movcs r6, r8 // greater than boundary condition
	str r6, [r7, #SPRITE_X]
	
	// Update Y based on y vel
	ldr r4, [r0, #SPRITE_Y_VEL]
	ldr r5, [r0, #SPRITE_Y]
	adds r5, r5, r4
	movmi r5, #0 // less than zero condition
	cmp r5, r9
	movcs r5, r9 // greater than boundary condition
	str r5, [r0, #SPRITE_Y]

	pop {r4, r5, r6, r7, r8, r9, pc}

############################################################################
.align 2
// Write your ClearTextBuffer, ClearVGA, and BitBlit routines below!
ClearVGA:
	push {r1,r2,r4,r5,r6,r7,lr}
	
	mov r4, r0 // stores the color
	
	// r1 is X, r2 is Y. We will start at (0,0) and move towards the max value
	mov r1, #0
	mov r2, #0
	
	b ClearVGATest
	
ClearVGALoop:
	ldr r5, =BACKBUFFER_REGISTER
	ldr r6, [r5]
	
	// Find proper offset
	mov r7, r2, LSL #10
	add r7, r7, r1, LSL #1
	
	add r6, r6, r7 // add base address + offset

	strh r4, [r6] // store color at calculated address

	add r1, r1, #1 // move to next x-pos
	
ClearVGATest:
	cmp r1, #320
	bls ClearVGALoop
	
	// if we have reached border for x, increment y and reset x
	mov r1, #0
	add r2, r2, #1
	
	cmp r2, #240
	bls ClearVGALoop
	
	pop {r1,r2,r4,r5,r6,r7,pc}
	
ClearTextBuffer:
	push {r1, r2, r3, r4, lr}
	
	mov r1, #0 // x
	mov r2, #0 // y
	
	b ClearTextBufferTest

ClearTextBufferLoop:

	ldr r3, =TEXT_BUFFER
	
	// calculate offset
	mov r4, r2, lsl #7
	add r4, r4, r1
	
	// calculate address
	add r3, r3, r4
	
	// 0x20 is ASCII space bar- used to clear buffer
	mov r4, #0x20
	
	// store space at address
	strb r4, [r3]
	
	// move to next x
	add r1, r1, #1
	
ClearTextBufferTest:
	cmp r1, #79
	bls ClearTextBufferLoop
	
	// if we have reached border for x, increment y and reset x
	mov r1, #0
	add r2, r2, #1
	
	cmp r2, #59
	bls ClearTextBufferLoop
	
	pop {r1, r2, r3, r4, pc}

############################################################################
	
DrawStr:
    @ Inputs:
    @ r0: x
    @ r1: y
    @ r2: pointer to the null-terminated string (s)
	
	push {r3,r4,r5,r6,r7,r8,lr}
	
	// Outside bounds? Don't even loop
	cmp r0, #80
	bge end
	cmp r1, #60
	bge end
	
	mov R6, R2
	ldr R7, =0xc9001dcf // max char buff address
	add R7, R7, #1
	ldr R8, =CHARBUF
	sub R8, R8, #1 // remove one because we are using bge 
	

	// Caclulate the correct address in the memory buffer
	lsl R1, #7	 // y offset
	add R1, R1, R0 // calculate total offset
	
	sub R1, R1, #1
	
	b test // unconditional branch to test

action:
	add R1, R1, #1 // move to next coordinate position (x)
	
	ldr R3, =CHARBUF // load base addr
	add R3, R3, R1 // add offset to base
	
	cmp R3, R7
	bge end // if we are at a coord that is outside the range of the char buff, end the function
	cmp R8, R3
	bge Skip_STR // if we are at a coord that is less than the range of the char buff, break
	
	ldrb R4, [R6] // get the ascii value in M[R6]
	
	strb R4, [R3] // store ascii character in char buff addr

Skip_STR:	
	add R6, R6, #1 // move to next word
	
test:
	ldrb R5, [R6]
	cmp R5, #0 // have we hit the end of the string?
	
	bne action
	
end:
	pop {r3,r4,r5,r6,r7,r8,pc} // free, return
	
############################################################################

BlitBlit:
	@ Inputs
	@ R0: pixel map pointer
	@ R1: X
	@ R2: y
	
	push {r0, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr}
	
	ldrh r3, [r0, #PIXMAP_WIDTH]			//width
	ldrh r4, [r0, #PIXMAP_HEIGHT]			//height
	ldrh r5, [r0, #PIXMAP_TRANSPARENCY] 	//transparency val
	add r6, r0, #PIXMAP_PIXELDATA			//pointer to data
	
	mov r7, #0 								//x
	mov r8, #0								//y
	mov r0, #0								//dont need r0 anymore- overwrite and store
											//pixel data offset
	
	b BlitBlitTest
	
BlitBlitLoop:
	
	// orginal x and original y + current offset to get current (x,y) to print at
	add r9, r7, r1
	add r10, r8, r2
	
	// Find proper offset to add to base char buff address
	mov r11, r10, LSL #10
	add r11, r11, r9, LSL #1
	
	// get adress pointed to by backbuffer
	ldr r12, =BACKBUFFER_REGISTER
	ldr r12, [r12]
	
	// find correct address
	add r12, r12, r11
	
	b BlitBlitLimitTestHigh // test if above max address
BlitBlitReturn: // if less than max address, return here
	b BlitBlitLimitTestLow // test if less than min address
BlitBlitReturn2: // if greater than min address, return here
	
	ldrh r11, [r6, r0] // get the pixel data (r6 + pixel offset)
	
	cmp r5, r11 // if the pixel data is transparent, skip
	bls BlitBlitSkip
	
	//store pix data at location
	strh r11, [r12]
	
BlitBlitSkip:
	
	//increment
	add r0, r0, #2  // next pixel
	add r7, r7, #1  // next x val
	
BlitBlitTest:
	cmp r7, r3 
	blt BlitBlitLoop
	
	// if we reach the x limit, reset to zero and increment y
	mov r7, #0
	add r8, r8, #1
	
	cmp r8, r4
	blt BlitBlitLoop
	
BlitBlitEnd:
	pop {r0, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, pc}
	
BlitBlitLimitTestHigh: 
// tests to see if curr address is beyond the limits of the buff
// if yes, end. if no, return and run as normal
	push {r3,r4}
	ldr r3, =BACKBUFFER_REGISTER
	ldr r3, [r3]
	ldr r4, =0x3c280
	add r3, r3, r4
	cmp r12, r3
	pop {r3, r4}
	bgt BlitBlitEnd
	b BlitBlitReturn
	
BlitBlitLimitTestLow:
// tests to see if curr address is beyond the limits of the buff
// if yes, skip. if no, return and run as normal
	push {r3}
	ldr r3, =BACKBUFFER_REGISTER
	ldr r3, [r3]
	cmp r3, r12
	pop {r3}
	bge BlitBlitSkip
	b BlitBlitReturn2
	
############################################################################

Divide:
	@ Inputs:
	@ r0: dividend
	@ r1: divisor
	
	@ Outputs:
	@ r0: quotient
	@ r1: remainder
	
	push {r2,r3,lr}

	mov R2, #0 // quot = 0
	mov r3, r0 // rem = dividend 
	
	b divide_test // branch to test
	
divide_loop:
	sub R3, R3, R1 // rem = rem - divisor
	add R2, R2, #1 // quot++
	
divide_test:
	cmp r3, r1 // compare rem and divisor
	bge divide_loop // is rem >= divisor?
	
	mov r0, r2 // return quotient
	mov r1, r3 // return remainder
		
	pop {r2,r3,pc}
	
############################################################################

DrawNum:
	@ Inputs:
	@ r0: x
	@ r1: y
	@ r2: number (integer)
	
	push {r3, r4, r6, r7, r8, lr}
	
	// If we are starting beyond the bounds, nothing should be drawn.
	cmp r0, #80
	bge End
	cmp r1, #60
	bge End
	
	mov r3, #128
	push {r3} // These two lines will serve as a test when we start printing the digits. Once we reach 128, we are done printing.
	
	mov r3, r0
	mov r4, r1 // save registers
	
	ldr R6, =0xc9001dcf // max char buff address
	add R6, R6, #1 // add one because we are using bge and we do not want the e condition
	ldr R8, =CHARBUF
	sub R8, R8, #1 // remove one because we are using bge 
	
	// Caclulate the correct address in the memory buffer, store in R4
	ldr r7, =CHARBUF // load base addr
	lsl r4, #7	 // y offset
	add r4, r4, r3 // calculate total offset
	add r7, r7, r4 // base + offset = addr
	
	mov r0, r2
	
	b DrawNumTest // branch to condition test
	
DrawNumLoop:

	// char buf test
	cmp R7, R6
	bge End // if we are at a coord that is beyond the range of the char buff, end the function
	
	// R0 holds number to divide. Either output of calling divide on last iteration
	// R1 (divisor) always reset 10. After calling divide, it will be set to the remainder
	mov r1, #10
	bl Divide

	add r1, r1, #48	// add 0x30 to get ASCII val. ex. 9 in Ascii = 0x39
	push {r1}
		
DrawNumTest:
	cmp r0, #0  // Is quotient zero? If so, dont divide again & branch to PrintLoopTest
	bne DrawNumLoop
	b PrintLoopTest
	
PrintLoopBody:
	cmp R8, R7
	bge Skip
	strb R3, [R7] // print remainder to the screen
Skip:
	add R7, R7, #1
	
PrintLoopTest: // Have we reached the 128 that was placed in the stack earlier? If yes, we have printed everything so end.
	pop {r3}
	cmp r3, #128
	bne PrintLoopBody
	
End:
	pop {r3, r4, r6, r7, r8, pc}
	
#################################################################################

DrawStars:
	// Draws stars for the background
	push {r0, r1, r2, lr}
	
	ldr r0, =Star
	mov r1, #30
	mov r2, #30
	bl BlitBlit
	 
	mov r1, #100
	mov r2, #32
	bl BlitBlit
	 
	mov r1, #300
	mov r2, #70
	bl BlitBlit
	 
	mov r1, #85
	mov r2, #85
	bl BlitBlit
	 
	mov r1, #200
	mov r2, #16
	bl BlitBlit
	
	mov r1, #160
	ldr r2, =306
	bl BlitBlit
	 
	mov r1, #100
	ldr r2, =275
	bl BlitBlit
	 
	mov r1, #300
	ldr r2, =142
	bl BlitBlit
	 
	mov r1, #85
	ldr r2, =85
	bl BlitBlit
	 
	mov r1, #200
	ldr r2, =232
	bl BlitBlit
	
	mov r1, #12
	ldr r2, =216
	bl BlitBlit
	 
	mov r1, #120
	ldr r2, =154
	bl BlitBlit
	 
	mov r1, #200
	ldr r2, =130
	bl BlitBlit
	 
	mov r1, #25
	ldr r2, =150
	bl BlitBlit
	 
	mov r1, #180
	ldr r2, =65
	bl BlitBlit
	
	ldr r1, =298
	ldr r2, =221
	bl BlitBlit

	pop {r0, r1, r2, pc}
	
#################################################################################	
	
ReadKeyboard:

	push {r4, r5, r6, lr}
	
	ldr r4, =KEYBOARD_REGISTER
	ldrb r5, [r4] // get the value in the keyboard io register
	ldr r6, =KEYBOARD_VALUE
	str r5, [r6] // store this value in the keyboard value register
		
	pop {r4, r5, r6, pc}
	
#################################################################################	
	
PowerUp:

	// PowerUpReadyRegister
	@ 0 = Recharging
	@ 1 = Ready to use but inactive
	@ 2 = Currently active
	
	push {r4, r5, r6, r7, r8, lr}
	
	ldr r6, =SPRITE_LOCATION_A
	ldr r7, [r6, #SPRITE_X_VEL]
	
	// Check the status register
	ldr r4, =PowerUpReadyRegister
	ldr r5, [r4]
	cmp r5, #0				// if 0, powerup recharging
	beq PowerUpRecharge
	
	cmp r5, #2
	beq PowerUpInUse
	
	// notify player that the power up is ready
	mov r0, #32
	mov r1, #1
	ldr r2, =power_up_string
	bl DrawStr
	
	// has the player pressed the m key?
	ldr r5, =KEYBOARD_VALUE
	ldr r7, [r5]
	cmp r7, #0x3a
	beq ActivatePowerUp
	
	PowerUpNotReady:
	
	pop {r4, r5, r6, r7, r8, pc}	
	
	ActivatePowerUp: // using the power up

	// reset status register
	mov r7, #0
	str r7, [r4]
	
	// power up now active
	mov r7, #2
	ldr r8, =PowerUpReadyRegister
	str r7, [r8]
	
	// Start the timer for the power up use
	ldr r4, =70
	ldr r8, =PowerUpTimer
	str r4, [r8]
	
	b PowerUpNotReady

PowerUpInUse:
	ldr r4, =PowerUpTimer 	// decrement the usage time remaining
	ldr r5, [r4]
	sub r5, r5, #1
	str r5, [r4]
	
	mov r0, #32
	mov r1, #1
	ldr r2, =poweruptest 	// Display "Speed Boost ACTIVATED"
	bl DrawStr
	
	cmp r5, #0
	bgt PowerUpNotReady		// if there is time remaining, end function
	
	ldr r4, =PowerUpReadyRegister
	mov r5, #0
	str r5, [r4]			// if timer runs out, reset ready register to 0
	
	ldr r4, =PowerUpRechargeTimer
	mov r5, #200
	str r5, [r4]			// start the recharge timer
	
	b PowerUpNotReady
	
PowerUpRecharge:
	ldr r4, =PowerUpRechargeTimer 	// decrement the recharge time remaining
	ldr r5, [r4]
	sub r5, r5, #1
	str r5, [r4]
	
	cmp r5, #0
	bgt PowerUpNotReady			// if power up is not ready, end function
	
	ldr r4, =PowerUpReadyRegister
	mov r5, #1
	str r5, [r4]				// if power up has recharged, change status bit to 1
	
	b PowerUpNotReady


.data
life_string: 		.string "Health:"
game_over_string:	.string "Game Over! Final Score:"
reset_string:		.string "Restart to Play Again"
difficulty_string:	.string "Difficulty Increasing"
power_up_string:	.string "Speed Boost Ready"
poweruptest:		.string "Speed Boost ACTIVATED"
	
Alien:
	.hword 42, 22, 0xd000
	.hword 0xf7fe, 0xf7fe, 0xf7ff, 0xffff, 0xfffe, 0xfffe, 0xfffe, 0xf7fe, 0xf7df, 0xf7df
	.hword 0xffdf, 0xfffe, 0xfffe, 0xf7ff, 0xf7ff, 0xefdf, 0xf7ff, 0xdfbf, 0x8d7b, 0x751c
	.hword 0x759f, 0x6d7d, 0x759d, 0x7559, 0xdfff, 0xe7ff, 0xf7ff, 0xf7fe, 0xffff, 0xffff
	.hword 0xf7fe, 0xf7fe, 0xf7fe, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xf7fe, 0xf7fe, 0xf7ff, 0xffff, 0xfffe, 0xfffe, 0xfffe, 0xf7fe
	.hword 0xf7df, 0xffff, 0xffdf, 0xfffe, 0xf7ff, 0xf7ff, 0xe79f, 0xefff, 0xe7bf, 0xd79f
	.hword 0x8ddd, 0x7d7d, 0x759e, 0x655c, 0x75bd, 0x757a, 0xcfff, 0xdfff, 0xe7ff, 0xe7be
	.hword 0xf7ff, 0xf7ff, 0xf7fe, 0xfffe, 0xfffe, 0xf7ff, 0xffff, 0xf7ff, 0xffff, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xfffe, 0xf7fe, 0xf7fe, 0xefff, 0xe7bf, 0x9599, 0x8538
	.hword 0x855a, 0x859c, 0x6cfb, 0x653c, 0x6d9d, 0x659d, 0x869f, 0x8ebf, 0x8e7d, 0x967c
	.hword 0x7d57, 0x8db8, 0xdfdf, 0xefff, 0xf7fe, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xfffe
	.hword 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffdf, 0xffff, 0xfffe, 0xf7fe, 0xf7fe, 0xefff, 0xdfbf, 0xcf9f
	.hword 0x95bb, 0x7d5b, 0x755b, 0x7d9d, 0x6d5d, 0x75bf, 0x6dbe, 0x6dbd, 0x867f, 0x7e9f
	.hword 0x86df, 0x869e, 0x6d99, 0x85da, 0xc79f, 0xdfdf, 0xf7ff, 0xfffe, 0xfffe, 0xfffe
	.hword 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffde, 0xffde
	.hword 0xfffe, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xf7fe, 0xf7fe, 0xefff, 0xdfdf
	.hword 0x95b9, 0x857a, 0x6d1b, 0x755d, 0x6d5d, 0x6d5d, 0x6d5e, 0x757e, 0x6d5d, 0x6d5c
	.hword 0x6ddd, 0x65bc, 0x7ebf, 0x86df, 0x7e9e, 0x7e5c, 0x85ba, 0x95d9, 0xe79f, 0xf7df
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfffe, 0xfffe
	.hword 0xffde, 0xffde, 0xfffe, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xf7fe, 0xf7ff
	.hword 0xdfbf, 0xcf9f, 0x857b, 0x7d7c, 0x757e, 0x759f, 0x759e, 0x757e, 0x755e, 0x757f
	.hword 0x757e, 0x6d7d, 0x6d9d, 0x657c, 0x7ebf, 0x769f, 0x871f, 0x86bf, 0x6d7a, 0x857a
	.hword 0xd79f, 0xefff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xffde, 0xffde, 0xffdf, 0xffff, 0xffff, 0xffff, 0xfffe, 0xf7fe
	.hword 0xf7ff, 0xe7bf, 0x9599, 0x8dbc, 0x6d1b, 0x757e, 0x6d7e, 0x6d5e, 0x6d7e, 0x6d5e
	.hword 0x755f, 0x755f, 0x755f, 0x757f, 0x6d7e, 0x6d9e, 0x6dde, 0x5dbc, 0x7e9f, 0x7e9f
	.hword 0x6d9c, 0x6d3a, 0x8dbc, 0x8d38, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xfffe, 0xfffe, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xf7fe, 0xf7ff, 0xefff, 0x8538, 0x7d3b, 0x755e, 0x7d9f, 0x6d5e, 0x759e
	.hword 0x6d5d, 0x757e, 0x757e, 0x6d5e, 0x755e, 0x755e, 0x6d5d, 0x759e, 0x6d7d, 0x659d
	.hword 0x869f, 0x867f, 0x75dd, 0x6d7b, 0x7d7c, 0x853a, 0xefff, 0xf7ff, 0xf7ff, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xfffe, 0xfffe, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xf7fe, 0xf7ff, 0xefff, 0xe7df, 0x8539, 0x7d1a, 0x7d7d, 0x7d5d
	.hword 0x7d9d, 0x755b, 0x7d7c, 0x755c, 0x757d, 0x757d, 0x755d, 0x7d7d, 0x7d7d, 0x755c
	.hword 0x755c, 0x757c, 0x757c, 0x757c, 0x757c, 0x757b, 0x7d7b, 0x857a, 0xefff, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xf7ff, 0xf7ff
	.hword 0xf7fe, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7ff, 0xf7ff, 0xe7bf, 0x9d9a, 0x8d5a
	.hword 0x855b, 0x7d3a, 0x855a, 0x855a, 0x855a, 0x7d5a, 0x7d5a, 0x7d7a, 0x7d5a, 0x7d5a
	.hword 0x855a, 0x853a, 0x853a, 0x855a, 0x7d5a, 0x7d5a, 0x7d7a, 0x7d5a, 0x7d5a, 0x8d58
	.hword 0xefdf, 0xf7ff, 0xf7fe, 0xf7de, 0xfffe, 0xfffe, 0xf7de, 0xfffe, 0xfffe, 0xfffe
	.hword 0xffff, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xf7de, 0x94d2, 0x8c92, 0x94d3, 0x9514
	.hword 0x7c73, 0x84b5, 0x84d6, 0x84f6, 0x84f6, 0x8cd6, 0x84d6, 0x84f6, 0x8516, 0x84f6
	.hword 0x84f6, 0x84d6, 0x84d6, 0x84d6, 0x8cd6, 0x84d6, 0x84d6, 0x84f6, 0x84f6, 0x8516
	.hword 0x84f5, 0x8cd4, 0x8cb3, 0x94b2, 0x8c91, 0x9d13, 0xffde, 0xffde, 0xffde, 0xffde
	.hword 0xffde, 0xffde, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xffff, 0x9d14, 0x94d3
	.hword 0x94d3, 0x8cd3, 0x8cd3, 0x8cd3, 0x8cb3, 0x8cd3, 0x8cd4, 0x8cd4, 0x8c93, 0x8cb3
	.hword 0x8cd3, 0x8cd3, 0x84b4, 0x84b4, 0x8cb3, 0x8cd3, 0x8cb3, 0x8c93, 0x8c93, 0x8cb3
	.hword 0x8cb3, 0x8cd3, 0x8cd3, 0x8c92, 0x94f3, 0x94b2, 0x8c92, 0x9d13, 0xf7be, 0xffdf
	.hword 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xf7bd, 0xfffe, 0xf7ff, 0x94b2, 0x8c72
	.hword 0x8452, 0x8472, 0x8c72, 0x8451, 0x8c91, 0x8c91, 0x8470, 0x8471, 0x8c93, 0x8c73
	.hword 0x8c72, 0x9491, 0x8c92, 0x8472, 0x8c93, 0x8493, 0x8472, 0x8c92, 0x8c92, 0x8c71
	.hword 0x8c92, 0x8c92, 0x8491, 0x8c91, 0x8c92, 0x8c72, 0x8472, 0x8492, 0x8c92, 0x8431
	.hword 0x8c92, 0x94b3, 0xf7df, 0xffff, 0xffff, 0xfffe, 0xfffe, 0xfffe, 0xf7ff, 0xef9e
	.hword 0x8cd3, 0x7c52, 0x8473, 0x8493, 0x8473, 0x8452, 0x8c91, 0x8c91, 0x8c91, 0x8451
	.hword 0x8c93, 0x8453, 0x8c51, 0x8c71, 0x8451, 0x8452, 0x8c93, 0x8c93, 0x8472, 0x8471
	.hword 0x8471, 0x8471, 0x8cb3, 0x8cb3, 0x8471, 0x8451, 0x8c71, 0x8472, 0x8493, 0x8493
	.hword 0x8493, 0x8473, 0x8452, 0x8cb3, 0xef9e, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7fe, 0xefbe
	.hword 0x6baf, 0x6bb0, 0x8cf5, 0x9d78, 0x7c94, 0x7c94, 0x9557, 0x9515, 0x8cb3, 0x8451
	.hword 0x8492, 0x8473, 0x9537, 0x9537, 0x8c93, 0x8c93, 0x8472, 0x84b3, 0x9516, 0x8d16
	.hword 0x84b3, 0x8492, 0x8473, 0x84b4, 0x9516, 0x9516, 0x8493, 0x8472, 0x8c92, 0x8493
	.hword 0x9557, 0x8d17, 0x7c95, 0x84b5, 0x9536, 0x8cf5, 0x7c31, 0x636e, 0xf7ff, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0x634e, 0x634f, 0x9537, 0x9537, 0x7453, 0x7c94, 0x9536, 0x9536
	.hword 0x8cb3, 0x8472, 0x8cb3, 0x7c73, 0x9537, 0x9537, 0x8473, 0x8492, 0x8472, 0x84b3
	.hword 0x9536, 0x9536, 0x84b3, 0x7c72, 0x7c52, 0x84b4, 0x9536, 0x9d37, 0x8cb4, 0x8472
	.hword 0x8c72, 0x8472, 0x9536, 0x9557, 0x7c94, 0x7453, 0x9d57, 0x9d56, 0x5b2d, 0x636e
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xf7de, 0xf7ff, 0xf7ff, 0x634e, 0x634e, 0x7c31, 0x73f0
	.hword 0x73d0, 0x7bf0, 0x7c10, 0x7bf0, 0x7c10, 0x7bf0, 0x7bf0, 0x7bf0, 0x7bf0, 0x7bf0
	.hword 0x7bf0, 0x7bf0, 0x7bf0, 0x7bf0, 0x7bf0, 0x7bf0, 0x73ef, 0x73cf, 0x7bf0, 0x7bf0
	.hword 0x7bf0, 0x7bf0, 0x7c10, 0x7c10, 0x7c10, 0x73d0, 0x7c31, 0x73cf, 0x6b6e, 0x634d
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7df, 0xffff, 0xffff, 0xef9e, 0x7bef, 0x73ae
	.hword 0x634d, 0x7c10, 0x8410, 0x7bcf, 0x7bef, 0x73cf, 0x73cf, 0x7bef, 0x7bef, 0x8410
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bcf, 0x7bcf, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x8430, 0x73ce
	.hword 0x7bef, 0x7bcf, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xf7be, 0x7bef, 0x6b6d, 0x6b4d, 0x6b8e, 0x8410, 0x8451, 0x7bef, 0x7c10
	.hword 0x73cf, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7c0f, 0x7c0f, 0x7bef, 0x7bef, 0x7c0f, 0x7c0f, 0x6b6d, 0x738e
	.hword 0x630c, 0x73ce, 0xef9d, 0xf7de, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0x7bef, 0x6b4d, 0x6b8e, 0x7bef, 0x6b6d, 0x7bef
	.hword 0x7bcf, 0x7bef, 0x7c10, 0x8430, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7c0f, 0x7c0f, 0x7bcf, 0x7bcf, 0x7bef, 0x7bef
	.hword 0x6b6d, 0x73ae, 0x632c, 0x7bef, 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff, 0xffff
	.hword 0xf7de, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef9d, 0xffff, 0xffff, 0xf7be
	.hword 0x7bcf, 0x6b8d, 0x6b8d, 0x6b6d, 0x7bcf, 0x73ce, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bcf, 0x738e, 0x6b6d
	.hword 0x6b8d, 0x6b6d, 0xffff, 0xffff, 0xffff, 0xf7de, 0xffff, 0xf7de, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0x632c, 0x632c, 0x6b6d, 0x6b6d, 0x7c0f, 0x7c0f, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bcf
	.hword 0x6b8d, 0x6b6d, 0x6b6d, 0x6b6d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff

Fire:
.hword 32, 32, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf7ff
	.hword 0xeffc, 0xe40d, 0xff7f, 0xeffe, 0xffdf, 0xffde, 0xf7fe, 0xffbf, 0xffdf, 0xff9f
	.hword 0xeffc, 0xf7ff, 0xffdc, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7df, 0xf7be, 0xfe17, 0xc2c5, 0xe596, 0xf7fe, 0xf7ff, 0xf7de, 0xf7ff, 0xf7de
	.hword 0xf7fe, 0xffdf, 0xffde, 0xf7df, 0xfffe, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffdf, 0xf7ff, 0xf596, 0xdae7, 0xed34, 0xeffe, 0xefbe, 0xfe78
	.hword 0xff1b, 0xf7fd, 0xeffd, 0xefbe, 0xffbf, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffdd, 0xffde, 0xef7b, 0xd2eb, 0xff3c, 0xffbd
	.hword 0xf657, 0xcaa8, 0xe4f1, 0xf7de, 0xffde, 0xffbf, 0xf7df, 0xffff, 0xf79f, 0xf7fd
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffde, 0xf7fe, 0xfffe, 0xf75c
	.hword 0xf7df, 0xfe98, 0xca88, 0xe2e7, 0xf44d, 0xf7ff, 0xffdf, 0xffbf, 0xf677, 0xffbe
	.hword 0xffdf, 0xf7fd, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7df, 0xffdf
	.hword 0xf7ff, 0xf7fe, 0xeffd, 0xd30a, 0xd2c7, 0xe308, 0xe36a, 0xffdf, 0xf7fe, 0xf7bc
	.hword 0xd329, 0xeed9, 0xffde, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xf7df, 0xffdf, 0xf7de, 0xdd11, 0xd287, 0xd327, 0xeb49, 0xe329, 0xf657
	.hword 0xf7fe, 0xfffe, 0xdc4f, 0xff7c, 0xf7fe, 0xff9f, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xf7fd, 0xffdf, 0xffbf, 0xfffd, 0xda89, 0xd2a7, 0xe369, 0xeb08
	.hword 0xeb28, 0xe42d, 0xffde, 0xffbf, 0xff9e, 0xf7de, 0xf7fd, 0xffbf, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xf7fd, 0xf7de, 0xffbf
	.hword 0xf7df, 0xffdf, 0xf7fe, 0xf7df, 0xf7fe, 0xf7df, 0xffde, 0xf5d4, 0xd286, 0xe2e7
	.hword 0xdb29, 0xeb09, 0xeb48, 0xeb29, 0xedb5, 0xf7fe, 0xffdf, 0xff9f, 0xf7fe, 0xf7fe
	.hword 0xffde, 0xf7fd, 0xff9f, 0xf7df, 0xf7fd, 0xf7ff, 0xf7ff, 0xffbe, 0xefdf, 0xfffe
	.hword 0xf7fe, 0xf7df, 0xf7fe, 0xeffe, 0xf7ff, 0xffdd, 0xffbc, 0xe7ff, 0xffdf, 0xd3ac
	.hword 0xc2a5, 0xe308, 0xf309, 0xe347, 0xe309, 0xf349, 0xe38a, 0xf73b, 0xf7fd, 0xff3b
	.hword 0xf5f4, 0xffdf, 0xf7df, 0xeffe, 0xffbe, 0xe533, 0xf697, 0xef9e, 0xf7ff, 0xffbe
	.hword 0xffdf, 0xf7ff, 0xf7bc, 0xffdf, 0xf7fd, 0xf7fe, 0xf7ff, 0xe4af, 0xcb09, 0xfffe
	.hword 0xff9e, 0xd2c9, 0xd2c7, 0xdb47, 0xf309, 0xdc46, 0xdba7, 0xeb28, 0xe328, 0xe4d1
	.hword 0xf7ff, 0xdc6d, 0xe369, 0xf574, 0xffff, 0xf7ff, 0xf7fd, 0xdae8, 0xe46e, 0xf7ff
	.hword 0xf7df, 0xf7fe, 0xffbe, 0xefdf, 0xf7fe, 0xf595, 0xf73a, 0xf7be, 0xffbe, 0xd2a7
	.hword 0xd2a7, 0xee14, 0xffbe, 0xca86, 0xdaa8, 0xeb28, 0xeb87, 0xdca5, 0xeca6, 0xeb28
	.hword 0xe36a, 0xf349, 0xf6da, 0xeb69, 0xeb07, 0xe34a, 0xfeb9, 0xf7ff, 0xf7fe, 0xd2a7
	.hword 0xdcaf, 0xffdf, 0xf7df, 0xf7fe, 0xf7fd, 0xf7bf, 0xeffe, 0xe3ef, 0xedb6, 0xf7ff
	.hword 0xe490, 0xcae6, 0xe329, 0xe3a8, 0xfefb, 0xdaa7, 0xd2c7, 0xeb47, 0xe464, 0xecc5
	.hword 0xec86, 0xe309, 0xf348, 0xeb27, 0xe3ed, 0xe308, 0xeb48, 0xe329, 0xec2d, 0xefbd
	.hword 0xf7df, 0xe4f2, 0xe718, 0xff9f, 0xffdf, 0xf7fe, 0xf7fe, 0xffdf, 0xf7ff, 0xe5d4
	.hword 0xff5d, 0xfffe, 0xd287, 0xcac6, 0xe308, 0xf348, 0xdbab, 0xd2a7, 0xd2e8, 0xe486
	.hword 0xe4e6, 0xed05, 0xf547, 0xe387, 0xeb07, 0xdb48, 0xeae9, 0xeb48, 0xeb48, 0xe328
	.hword 0xdb48, 0xf574, 0xf7df, 0xff9d, 0xf7fe, 0xffdf, 0xfffe, 0xfffe, 0xffbd, 0xf7ff
	.hword 0xf7de, 0xf7fd, 0xf7fe, 0xf616, 0xd266, 0xe2c7, 0xe389, 0xdb29, 0xe306, 0xe34a
	.hword 0xeb69, 0xdca3, 0xeca6, 0xf4e4, 0xe525, 0xec84, 0xe368, 0xeb6a, 0xe329, 0xeb48
	.hword 0xe2e7, 0xf348, 0xe368, 0xeb09, 0xff1a, 0xefff, 0xffdf, 0xefde, 0xf7fe, 0xffbe
	.hword 0xf7ff, 0xffbe, 0xf7fe, 0xffbf, 0xf7fe, 0xdc2e, 0xd2c8, 0xe2e8, 0xeb09, 0xeb48
	.hword 0xeb89, 0xeb28, 0xe3a6, 0xec45, 0xe544, 0xed05, 0xf505, 0xf505, 0xe3c6, 0xeae9
	.hword 0xe446, 0xdb89, 0xe349, 0xeb28, 0xeb09, 0xe347, 0xecf1, 0xffdf, 0xf7fe, 0xffdf
	.hword 0xf7fe, 0xffdf, 0xf7fe, 0xffdf, 0xf7df, 0xfffe, 0xf7ff, 0xdac8, 0xd2a8, 0xe328
	.hword 0xeb29, 0xec04, 0xdc85, 0xe367, 0xdc26, 0xdca4, 0xf505, 0xece4, 0xed06, 0xed23
	.hword 0xf466, 0xe3a7, 0xed05, 0xece4, 0xe368, 0xeb0a, 0xe347, 0xe34a, 0xeb6a, 0xf7ff
	.hword 0xfffd, 0xffdf, 0xffdf, 0xf7ff, 0xf7fe, 0xffff, 0xf7ff, 0xfffe, 0xff9d, 0xd2c8
	.hword 0xd2a8, 0xeb28, 0xe328, 0xec85, 0xe484, 0xec47, 0xec65, 0xe4e4, 0xece5, 0xed86
	.hword 0xed86, 0xe4e5, 0xfce6, 0xf486, 0xece6, 0xece5, 0xf446, 0xe329, 0xe348, 0xe329
	.hword 0xeb49, 0xeefa, 0xfffe, 0xffdf, 0xf7de, 0xf7ff, 0xf7fe, 0xf7ff, 0xf7fe, 0xf7fe
	.hword 0xfefa, 0xcaa7, 0xd2e8, 0xeb28, 0xdb87, 0xe4a5, 0xe4c4, 0xf506, 0xf4a4, 0xe524
	.hword 0xed26, 0xe608, 0xee07, 0xe4e5, 0xf525, 0xf525, 0xece7, 0xed05, 0xf505, 0xe3c8
	.hword 0xe328, 0xe329, 0xeb29, 0xed73, 0xf7fe, 0xffdf, 0xf7ff, 0xffdf, 0xf7de, 0xf7ff
	.hword 0xf7fe, 0xf7fe, 0xf616, 0xca87, 0xd308, 0xeb28, 0xe427, 0xdc84, 0xe504, 0xed25
	.hword 0xecc3, 0xe525, 0xf5c8, 0xde27, 0xee49, 0xed46, 0xed03, 0xed24, 0xece5, 0xf525
	.hword 0xed25, 0xec86, 0xe328, 0xe328, 0xeb48, 0xe44d, 0xf7fe, 0xfffe, 0xf7ff, 0xffdf
	.hword 0xffdf, 0xffdf, 0xfffe, 0xfffe, 0xed94, 0xd287, 0xdb28, 0xeb28, 0xec85, 0xe484
	.hword 0xe505, 0xed25, 0xed25, 0xed26, 0xee29, 0xde47, 0xee6a, 0xf5a7, 0xe524, 0xe545
	.hword 0xed04, 0xf505, 0xed05, 0xf525, 0xe388, 0xe328, 0xeb28, 0xe38a, 0xf7fe, 0xfffe
	.hword 0xf7ff, 0xffdf, 0xffdf, 0xffdf, 0xf7de, 0xffdf, 0xe5d6, 0xd287, 0xdb28, 0xeb48
	.hword 0xe4a4, 0xeca4, 0xe505, 0xed67, 0xedc7, 0xed67, 0xde08, 0xee88, 0xee8a, 0xf608
	.hword 0xedc7, 0xf628, 0xe546, 0xf505, 0xece4, 0xed25, 0xec07, 0xe328, 0xe328, 0xe36a
	.hword 0xf7de, 0xffdf, 0xf7ff, 0xffdf, 0xffdf, 0xffff, 0xf7ff, 0xfffe, 0xeeda, 0xda86
	.hword 0xdae8, 0xe3a8, 0xdc84, 0xecc5, 0xed05, 0xe5e8, 0xee28, 0xede8, 0xde48, 0xf689
	.hword 0xee89, 0xf669, 0xf649, 0xf6a9, 0xee07, 0xed25, 0xf4e5, 0xe525, 0xec86, 0xeb28
	.hword 0xe348, 0xe3cc, 0xf7de, 0xffdf, 0xf7ff, 0xfffe, 0xfffe, 0xf7fe, 0xf7ff, 0xfffe
	.hword 0xffdf, 0xda86, 0xd2c7, 0xe3e8, 0xdca5, 0xe4a4, 0xf505, 0xde47, 0xe648, 0xee68
	.hword 0xeec9, 0xee49, 0xee89, 0xeea9, 0xee69, 0xee89, 0xee88, 0xf546, 0xfce6, 0xe524
	.hword 0xecc5, 0xeb28, 0xe349, 0xec4e, 0xffdf, 0xffdf, 0xf7ff, 0xf7de, 0xffdf, 0xf7fe
	.hword 0xf7fd, 0xf7bf, 0xffdf, 0xdb09, 0xcac5, 0xeba8, 0xe4a4, 0xe4c6, 0xe566, 0xe628
	.hword 0xe649, 0xee87, 0xeea9, 0xeeb2, 0xef34, 0xe688, 0xee6a, 0xf6a9, 0xe669, 0xee27
	.hword 0xf506, 0xed04, 0xeca7, 0xeb29, 0xdb88, 0xed33, 0xffdf, 0xffdf, 0xf7df, 0xeffe
	.hword 0xffdf, 0xf7bd, 0xfffe, 0xffdf, 0xfffe, 0xcc0d, 0xeaa7, 0xe348, 0xe463, 0xe4e6
	.hword 0xf5c6, 0xee27, 0xe66a, 0xee8a, 0xe669, 0xef33, 0xf735, 0xeeac, 0xf689, 0xf66a
	.hword 0xeeaa, 0xee4a, 0xed05, 0xed06, 0xe445, 0xeb27, 0xf32a, 0xef1a, 0xffdf, 0xfffd
	.hword 0xffdf, 0xf7fd, 0xf7df, 0xf7fd, 0xffdf, 0xf7be, 0xf7de, 0xff5b, 0xda87, 0xe308
	.hword 0xec84, 0xecc4, 0xdd86, 0xd628, 0xee88, 0xfeb0, 0xf731, 0xef33, 0xeef6, 0xef36
	.hword 0xeef4, 0xee88, 0xeea8, 0xf68a, 0xf526, 0xece3, 0xf446, 0xeb07, 0xecb0, 0xf7df
	.hword 0xf7ff, 0xf7bd, 0xffdf, 0xf7fd, 0xffdf, 0xf7fe, 0xffdf, 0xf7fe, 0xffdf, 0xf7de
	.hword 0xd4d0, 0xda87, 0xdc66, 0xdca4, 0xf5c7, 0xe628, 0xde67, 0xff34, 0xef14, 0xe73a
	.hword 0xe73b, 0xdf7c, 0xe73b, 0xf68e, 0xf66b, 0xe687, 0xe545, 0xf504, 0xeb87, 0xd38b
	.hword 0xf77a, 0xffdf, 0xf7ff, 0xffdf, 0xf7df, 0xffdf, 0xfffe, 0xf7ff, 0xf7fe, 0xefde
	.hword 0xffdf, 0xf7ff, 0xf7fd, 0xd3cc, 0xdb47, 0xeca4, 0xe523, 0xe608, 0xe6a9, 0xf715
	.hword 0xef16, 0xe75e, 0xf71d, 0xe73d, 0xd75b, 0xe6d1, 0xee89, 0xee08, 0xf506, 0xe486
	.hword 0xdb8c, 0xf6fa, 0xf7de, 0xf7df, 0xffdf, 0xffdf, 0xf7de, 0xffdf, 0xf7fe, 0xffdf
	.hword 0xf7fe, 0xf7fe, 0xffdf, 0xffdf, 0xf7ff, 0xffdf, 0xe450, 0xdba5, 0xe485, 0xf5e8
	.hword 0xe627, 0xf714, 0xe758, 0xe73a, 0xe73b, 0xe71a, 0xef1c, 0xeef3, 0xee8a, 0xf585
	.hword 0xfc67, 0xdc0b, 0xfe79, 0xf7ff, 0xffdf, 0xffdf, 0xf7be, 0xeffd, 0xffdf, 0xf7df
	.hword 0xf7ff, 0xffdf, 0xf7fe, 0xffdf, 0xf7fe, 0xffdf, 0xffdf, 0xf7fe, 0xffdf, 0xf658
	.hword 0xe40a, 0xec66, 0xee09, 0xeed0, 0xef16, 0xe75b, 0xe75d, 0xe75c, 0xe73a, 0xee8a
	.hword 0xed46, 0xe447, 0xf553, 0xf7be, 0xfffe, 0xffdf, 0xefbe, 0xffdf, 0xf7ff, 0xeffe
	.hword 0xffdf, 0xf7ff, 0xffdf, 0xf7de, 0xf7ff, 0xffdf, 0xfffe, 0xf7df, 0xfffe, 0xefdf
	.hword 0xf7ff, 0xf7fd, 0xffdf, 0xf71c, 0xedf1, 0xe589, 0xf6b0, 0xe6f7, 0xe73a, 0xeed7
	.hword 0xe5ce, 0xe549, 0xf696, 0xf7bf, 0xfffe, 0xf7ff, 0xf7de, 0xf7fd, 0xffff, 0xf7be
	.hword 0xfffe, 0xffdf, 0xf7de, 0xfffd
	
Laser: 
.hword 8, 3, 0xffff
	.hword 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0
	.hword 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0
	.hword 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0, 0x07e0
	
Star:
	.hword 2, 2, 0xffff
	.hword 0xfffd, 0xfffd, 0xfffd, 0xfffd
	
Ship:
	.hword 32, 24, 0xd000
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xf7be, 0xffff, 0xffff, 0xf7de, 0x0, 0x841, 0x0, 0x21
	.hword 0x0, 0x1, 0x22, 0x1, 0x1041, 0x1000, 0xff1b, 0xfe99, 0xfe99, 0xfefa
	.hword 0xffbe, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff, 0xe75c, 0xffff, 0x0, 0x0
	.hword 0x0, 0x0, 0x0, 0x21, 0x1, 0x0, 0x800, 0x40a2, 0x79c5, 0x8184
	.hword 0x8184, 0x81e6, 0xff5c, 0xffbe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdf1b, 0x10a2, 0x0
	.hword 0x8c51, 0x7bcf, 0x8450, 0x73ce, 0x7c10, 0x73cf, 0x1083, 0x1020, 0x2860, 0xc44e
	.hword 0x99e3, 0xa9a2, 0xa9a3, 0xa1c4, 0xfe36, 0xfe98, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef9d, 0xffff, 0xe73c
	.hword 0x18e3, 0x0, 0x8430, 0x6b6d, 0x94b2, 0x7bef, 0x8c71, 0x7bf0, 0x0, 0x800
	.hword 0x2000, 0xe510, 0xec2b, 0xfbc9, 0xfbca, 0xf3cb, 0x9a05, 0x89c5, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xe73c, 0xffff, 0x0, 0x20, 0x5acb, 0x5aeb, 0x632c, 0x5acb
	.hword 0x0, 0x1020, 0x2000, 0xe4f0, 0xf42b, 0xfbc9, 0xfbca, 0xf3cb, 0xa1e5, 0x89c5
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xef9d, 0xffff, 0xffff, 0xffff, 0x0, 0x841, 0x52aa, 0x632c
	.hword 0x632c, 0x52cb, 0x18e4, 0x0, 0x2840, 0xc44e, 0x99c3, 0xa9a2, 0xa9a3, 0xa1c4
	.hword 0xfe16, 0xfe78, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0x841, 0x0, 0x0, 0x841, 0x0, 0x841, 0x0, 0x0, 0xb596, 0xad55
	.hword 0xb596, 0xb5b6, 0xb5b6, 0xb5d7, 0x94b3, 0x1062, 0x800, 0x40a2, 0x81c5, 0x8184
	.hword 0x8184, 0x81c6, 0xff3c, 0xff9d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0x0, 0x21, 0x0, 0x21, 0x0, 0x20, 0x0, 0x21
	.hword 0xb576, 0xbdb7, 0xad75, 0xb596, 0xad55, 0xb5d7, 0xb5b7, 0x0, 0x1041, 0x1000
	.hword 0xff3b, 0xfeba, 0xfeda, 0xfefb, 0xffbe, 0xffbe, 0xf7ff, 0xf7ff, 0x0, 0x0
	.hword 0x20, 0x0, 0x0, 0x0, 0xad75, 0xb5b6, 0xad75, 0xb5b6, 0xb5b6, 0xad75
	.hword 0xb5b6, 0xad75, 0xb596, 0xad55, 0xb5d6, 0xb596, 0xad55, 0xb5b6, 0xad96, 0xad76
	.hword 0xb596, 0xbdb6, 0x800, 0x1000, 0xff7d, 0xffde, 0xf7de, 0xf7fe, 0xf7ff, 0xdf1b
	.hword 0x18e3, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb5b6, 0xad96, 0xad96, 0x0
	.hword 0x0, 0xad96, 0xad96, 0xb5b6, 0xb596, 0xb5b6, 0xad96, 0xb5b6, 0xb5b6, 0xad55
	.hword 0xad96, 0xb5d6, 0x9d13, 0xb5d6, 0x1041, 0x1041, 0xffdf, 0xffff, 0xefde, 0xeffe
	.hword 0x0, 0x2104, 0x94b2, 0xb5b6, 0xb5b6, 0xad75, 0xad96, 0xb5b6, 0xad75, 0xad96
	.hword 0xb5b6, 0x20, 0x20, 0xb5b6, 0xad96, 0xad75, 0xa554, 0xc638, 0xa534, 0xad96
	.hword 0xad55, 0x6b4d, 0x630c, 0x5aeb, 0x7bef, 0x94f3, 0x0, 0x0, 0xf7be, 0xf7df
	.hword 0xf7ff, 0xf7fe, 0x0, 0x0, 0xb5b6, 0xb5b6, 0xad75, 0xad96, 0xb5b6, 0xad75
	.hword 0xb5b6, 0x0, 0x20, 0xe75c, 0xe75c, 0x20, 0x0, 0xb5b6, 0xb5d6, 0x9d34
	.hword 0x1062, 0x0, 0x842, 0x0, 0x821, 0x0, 0xa554, 0xb5f6, 0x20, 0x20
	.hword 0xf7df, 0xf7ff, 0xffdf, 0xf7de, 0x0, 0x0, 0xb5b7, 0xb5b7, 0xad76, 0xad96
	.hword 0xb5b6, 0xad76, 0xb5b7, 0x0, 0x21, 0xe75d, 0xe75d, 0x21, 0x0, 0xb5b6
	.hword 0xb5d6, 0xa514, 0x1062, 0x0, 0x842, 0x0, 0x841, 0x0, 0xa554, 0xb5d6
	.hword 0x20, 0x0, 0xf7df, 0xffdf, 0xffdf, 0xffbe, 0x0, 0x2104, 0x94b2, 0xb5b6
	.hword 0xb5b6, 0xad76, 0xad96, 0xb5b6, 0xad75, 0xad96, 0xb5b6, 0x21, 0x21, 0xb5b6
	.hword 0xad96, 0xad75, 0xa534, 0xc638, 0xa534, 0xb596, 0xad55, 0x6b4d, 0x630c, 0x5aeb
	.hword 0x7bef, 0x9cf3, 0x0, 0x0, 0xf7be, 0xffdf, 0xffdf, 0xffdf, 0xf7ff, 0xdf1c
	.hword 0x18e4, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb5b7, 0xad96, 0xad96, 0x0
	.hword 0x0, 0xad96, 0xad96, 0xb5b7, 0xb596, 0xb5b6, 0xb575, 0xbdb6, 0xb5b6, 0xad54
	.hword 0xad95, 0xb5d6, 0xa513, 0xbdd7, 0x1041, 0x1041, 0xffdf, 0xffdf, 0xf7de, 0xf7fe
	.hword 0xf7ff, 0xf7ff, 0x0, 0x0, 0x21, 0x0, 0x0, 0x0, 0xad76, 0xb5b6
	.hword 0xad75, 0xb5b6, 0xb5b7, 0xad75, 0xb5b7, 0xad76, 0xb596, 0xad55, 0xbdd6, 0xb595
	.hword 0xad75, 0xb5b6, 0xad95, 0xad95, 0xb596, 0xbdb6, 0x800, 0x1000, 0xff9d, 0xffde
	.hword 0xf7de, 0xf7fe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb576, 0xbdb7
	.hword 0xad75, 0xb596, 0xad55, 0xb5f7, 0xb5b7, 0x0, 0x1042, 0x1000, 0xff3c, 0xfeda
	.hword 0xfefa, 0xff1b, 0xffde, 0xefbe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0x841, 0x0, 0x0, 0x20, 0x0, 0x20, 0x0, 0x0
	.hword 0xb596, 0xad55, 0xb5b6, 0xb5d6, 0xb5b6, 0xb5b6, 0x94b2, 0x1062, 0x800, 0x38a2
	.hword 0x79c5, 0x8984, 0x89a4, 0x81e6, 0xff5c, 0xffbe, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xffff
	.hword 0xffff, 0xffff, 0x0, 0x841, 0x52aa, 0x5b2c, 0x632c, 0x5acb, 0x18e3, 0x800
	.hword 0x2040, 0xbc4e, 0x99e3, 0xa9a2, 0xa9a3, 0xa1c4, 0xfe16, 0xfe78, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xe75c, 0xffff, 0x0, 0x20, 0x52eb, 0x5aec, 0x632d, 0x5acb
	.hword 0x0, 0x1820, 0x1800, 0xdd10, 0xec4c, 0xfbca, 0xfbaa, 0xf3ab, 0x99e5, 0x89c5
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xef9d, 0xffff, 0xe73c, 0x18e3, 0x0, 0x8430, 0x6b6d, 0x8cb2, 0x7bf0
	.hword 0x8472, 0x7bf0, 0x0, 0x800, 0x1800, 0xdd10, 0xec2c, 0xfbca, 0xfbca, 0xf3ab
	.hword 0xa1e5, 0x89c6, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdf1b, 0x18c3, 0x0, 0x8c51, 0x7bcf
	.hword 0x8451, 0x73cf, 0x7c10, 0x7bcf, 0x1083, 0x1020, 0x2860, 0xc46e, 0x99e4, 0xa9a2
	.hword 0xa983, 0xa9c4, 0xfe16, 0xfe99, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xffff, 0xffff, 0xef9d, 0xffff
	.hword 0x0, 0x0, 0x0, 0x0, 0x0, 0x21, 0x0, 0x0, 0x800, 0x40a1
	.hword 0x81a5, 0x8943, 0x8944, 0x89a6, 0xff3c, 0xff9e, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7de, 0xffff
	.hword 0xffff, 0xffff, 0x0, 0x822, 0x0, 0x21, 0x0, 0x0, 0x21, 0x801
	.hword 0x1821, 0x1800, 0xfeba, 0xfe37, 0xfe58, 0xfe9a, 0xff9e, 0xff7e

ReverseShip:
.hword 32, 24, 0xd000
	.hword 0xf7be, 0xffbe, 0xfedb, 0xfe99, 0xfe99, 0xff1b, 0x1000, 0x1041, 0x1, 0x22
	.hword 0x1, 0x0, 0x841, 0x0, 0x821, 0x0, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffbe, 0xff5c, 0x81e6, 0x8184, 0x8184, 0x79c5, 0x40a2, 0x800
	.hword 0x0, 0x1, 0x21, 0x0, 0x0, 0x0, 0x1, 0x0, 0xffff, 0xe75c
	.hword 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xfe98, 0xfe36, 0xa1c4, 0xa9a3, 0xa9a2, 0x99e3
	.hword 0xc44e, 0x2860, 0x800, 0x1082, 0x7bcf, 0x8431, 0x7bef, 0x8c71, 0x73cf, 0x8430
	.hword 0x0, 0x861, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x89c5, 0x9a05, 0xf3cb, 0xfbca
	.hword 0xfbc9, 0xec2b, 0xe510, 0x2000, 0x800, 0x0, 0x7bef, 0x8451, 0x7bef, 0x94b2
	.hword 0x6b6d, 0x8451, 0x0, 0x10a2, 0xef9d, 0xffff, 0xf7de, 0xf7de, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x89c5, 0x99e5
	.hword 0xf3ab, 0xfbca, 0xfbc9, 0xf42b, 0xe4f0, 0x2000, 0x1040, 0x0, 0x52cb, 0x630c
	.hword 0x5aeb, 0x5acb, 0x21, 0x0, 0xffff, 0xe73c, 0xffff, 0xf7df, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfe78, 0xfe16, 0xa1c4, 0xa9a3, 0xa9a2, 0x99c3, 0xc44e, 0x2840, 0x0, 0x10c3
	.hword 0x52eb, 0x634d, 0x6b4d, 0x52aa, 0x821, 0x0, 0xffff, 0xffff, 0xffff, 0xef7d
	.hword 0xffff, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xff9d, 0xff3c, 0x81c6, 0x8184, 0x8184, 0x81c5, 0x40a2, 0x800
	.hword 0x18a3, 0x94d3, 0xb5b6, 0xad96, 0xb596, 0xb596, 0xad76, 0xb5b7, 0x0, 0x0
	.hword 0x21, 0x0, 0x20, 0x0, 0x0, 0x21, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffbe, 0xffbe, 0xfefb, 0xfeda, 0xfeba, 0xff3b
	.hword 0x1000, 0x1041, 0x0, 0xb5b7, 0xb5d7, 0xad75, 0xb596, 0xb576, 0xb5b7, 0xad76
	.hword 0x21, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7de, 0xffde, 0xff9d
	.hword 0x1000, 0x800, 0xbdb6, 0xb596, 0xad76, 0xad96, 0xb5b6, 0xad55, 0xb596, 0xb5d6
	.hword 0xad55, 0xb596, 0xad75, 0xb5b6, 0xad75, 0xb5b6, 0xb5b6, 0xad75, 0xb5b6, 0xad75
	.hword 0x0, 0x0, 0x0, 0x21, 0x0, 0x0, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7fe
	.hword 0xffff, 0xffdf, 0x1062, 0x841, 0xb5d7, 0x9d13, 0xb5d6, 0xad96, 0xad55, 0xb5b6
	.hword 0xb5b6, 0xad96, 0xb5b6, 0xb596, 0xb5b6, 0xad96, 0xad96, 0x0, 0x0, 0xad96
	.hword 0xad96, 0xb5b6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18e3, 0xdf1b, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xf7be, 0x0, 0x0, 0x9cf3, 0x7bee, 0x5aeb, 0x630c
	.hword 0x6b4d, 0xad55, 0xad96, 0xa534, 0xc638, 0xa554, 0xad75, 0xad96, 0xb5b6, 0x20
	.hword 0x20, 0xb5b6, 0xad96, 0xad75, 0xb5d6, 0xad75, 0xad96, 0xb5b6, 0xb5b6, 0x94d2
	.hword 0x18e4, 0x0, 0xf7be, 0xffdf, 0xf7ff, 0xf7df, 0x20, 0x41, 0xb5f6, 0xa554
	.hword 0x0, 0x821, 0x0, 0x842, 0x0, 0x1062, 0x9d34, 0xb5d6, 0xb5b6, 0x0
	.hword 0x20, 0xe75c, 0xe75c, 0x20, 0x0, 0xb5b6, 0xad96, 0xad96, 0xb5d6, 0xad75
	.hword 0xb5b6, 0xbdf7, 0x0, 0x20, 0xf7be, 0xffdf, 0xffdf, 0xf7df, 0x0, 0x21
	.hword 0xbdf7, 0xa554, 0x0, 0x841, 0x0, 0x842, 0x0, 0x1062, 0xa514, 0xb5d6
	.hword 0xb5b6, 0x0, 0x21, 0xe75d, 0xe75d, 0x21, 0x0, 0xb5b7, 0xad96, 0xad96
	.hword 0xb5d7, 0xad75, 0xb5b6, 0xbdf7, 0x0, 0x21, 0xffdf, 0xffdf, 0xffdf, 0xf7be
	.hword 0x0, 0x0, 0x9cf3, 0x7bcf, 0x5aeb, 0x630c, 0x6b4d, 0xad55, 0xb596, 0xa534
	.hword 0xc638, 0xa534, 0xad75, 0xad96, 0xb5b6, 0x21, 0x21, 0xb5b6, 0xad96, 0xad75
	.hword 0xb5d7, 0xad76, 0xad96, 0xb5b6, 0xb5b6, 0x94d3, 0x18e4, 0x0, 0xf7fe, 0xf7de
	.hword 0xffdf, 0xffdf, 0x1062, 0x1041, 0xbdb7, 0x9cf3, 0xb5d6, 0xad95, 0xad55, 0xb5b6
	.hword 0xbdb6, 0xb575, 0xb5b6, 0xb596, 0xb5b7, 0xad96, 0xad96, 0x0, 0x0, 0xad96
	.hword 0xad96, 0xb5b7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18e4, 0xdf1c, 0xf7ff
	.hword 0xf7fe, 0xffde, 0xffde, 0xff9d, 0x1000, 0x800, 0xbdb6, 0xb596, 0xad96, 0xad95
	.hword 0xb5b6, 0xad75, 0xb595, 0xbdd6, 0xad55, 0xb596, 0xad76, 0xb5b6, 0xad75, 0xb5b6
	.hword 0xb5b7, 0xad75, 0xb5b7, 0xad75, 0x0, 0x0, 0x0, 0x21, 0x0, 0x0
	.hword 0xf7ff, 0xf7ff, 0xf7be, 0xffde, 0xff1b, 0xfeda, 0xfeda, 0xff3c, 0x1000, 0x1042
	.hword 0x0, 0xb5b7, 0xb5d7, 0xad75, 0xb5b6, 0xad75, 0xbdb7, 0xb576, 0x20, 0x0
	.hword 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffbd, 0xff5b, 0x81e6, 0x8985, 0x8984, 0x79c5
	.hword 0x38a2, 0x800, 0x1883, 0x94d3, 0xb5b6, 0xad96, 0xadb6, 0xb5b6, 0xad76, 0xbdb7
	.hword 0x0, 0x0, 0x841, 0x0, 0x20, 0x0, 0x0, 0x841, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfe78, 0xfe16, 0xa1c4, 0xa9a3
	.hword 0xa9a3, 0x99e3, 0xc44e, 0x2840, 0x800, 0x18c3, 0x5acb, 0x634d, 0x634d, 0x52ca
	.hword 0x41, 0x0, 0xffff, 0xffff, 0xffff, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x89c5, 0xa1e5
	.hword 0xf3ab, 0xfbaa, 0xfbca, 0xec4c, 0xdd10, 0x1800, 0x1840, 0x0, 0x5acb, 0x5b2c
	.hword 0x52eb, 0x52eb, 0x21, 0x0, 0xffff, 0xe73c, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0x89c5, 0xa1e5, 0xf3ab, 0xfbcb, 0xfbca, 0xec2c, 0xdd10, 0x1800, 0x800, 0x0
	.hword 0x7bf0, 0x8451, 0x73ef, 0x8cb2, 0x6b6d, 0x8451, 0x0, 0x18e3, 0xe73c, 0xffff
	.hword 0xef9d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xfe99, 0xfe16, 0xa9a5, 0xa983, 0xa9a3, 0x99e4, 0xc46e, 0x2860
	.hword 0x800, 0x1083, 0x7bd0, 0x8431, 0x73ef, 0x8471, 0x73cf, 0x8430, 0x0, 0x18c3
	.hword 0xdf1b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xff9d, 0xff3b, 0x89a6, 0x8944, 0x8944, 0x81a5
	.hword 0x40a1, 0x800, 0x0, 0x1, 0x21, 0x0, 0x0, 0x0, 0x1, 0x0
	.hword 0xffff, 0xef7d, 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xff9d, 0xff9d, 0xfe9a, 0xfe58
	.hword 0xfe38, 0xfeba, 0x1800, 0x1021, 0x1, 0x22, 0x1, 0x0, 0x41, 0x0
	.hword 0x821, 0x0, 0xffff, 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	
BrokenAlien1:
	.hword 40, 22, 0xd000
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7fe
	.hword 0xfffe, 0xfffe, 0xf7fe, 0xf7ff, 0xefff, 0xefff, 0xefff, 0xf7ff, 0x1, 0x3
	.hword 0x95bb, 0x7d9c, 0x6d3b, 0x859b, 0xd7bf, 0xe7df, 0xefff, 0xf7ff, 0xffdf, 0xffdf
	.hword 0xfffe, 0xf7de, 0xffff, 0xffff, 0xffff, 0xffff, 0xfffe, 0xfffe, 0xfffe, 0xfffe
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xf7ff, 0xf7ff, 0xf7fe, 0xf7fe
	.hword 0xfffe, 0xf7fe, 0xf7ff, 0xf7ff, 0xe7bf, 0xe7df, 0xefff, 0xd75e, 0x44, 0x8e7
	.hword 0x74b7, 0x753a, 0x8dfd, 0x7539, 0xdfff, 0xdfff, 0xdfbf, 0xd75d, 0xf7df, 0xf7df
	.hword 0xf7ff, 0xf7fe, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xfffe, 0xfffe, 0xfffe, 0xfffe
	.hword 0xf7fe, 0xf7fe, 0xf7fe, 0xfffe, 0xffff, 0xffdf, 0xffdf, 0xffff, 0xfffe, 0xf7fe
	.hword 0xf7fe, 0xf7fe, 0xefff, 0xe7bf, 0x9d78, 0x9559, 0x855a, 0x961d, 0x74b8, 0x74d8
	.hword 0xa7, 0xc7, 0x95fb, 0x9ebe, 0x861b, 0x967c, 0x8dd9, 0x9e1a, 0xefff, 0xf7ff
	.hword 0xf7ff, 0xf7de, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xf7fe, 0xf7ff, 0xf7ff, 0xffdf, 0xffdf, 0xffdf, 0xfffe, 0xf7fe
	.hword 0xf7fe, 0xefff, 0xe7df, 0xefff, 0x8cd7, 0x8519, 0x7d3b, 0x6d1a, 0x8ddd, 0x95fd
	.hword 0x4, 0x44, 0x9dfa, 0x9e9d, 0x96de, 0x9eff, 0x64b6, 0x74f6, 0xdfff, 0xefff
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffde, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffde, 0xfffe, 0xffff, 0xf7ff
	.hword 0xefff, 0xdfbf, 0x9db8, 0x7cd6, 0x45, 0x46, 0x8d9c, 0x7d3b, 0x7d3a, 0x7cf8
	.hword 0x65, 0x2, 0x106, 0x43, 0x969d, 0x7dfb, 0x149, 0xc6, 0x7cd5, 0x9db8
	.hword 0xd75e, 0xf7ff, 0xf7ff, 0xf7fe, 0xf7fe, 0xf7fe, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffdf, 0xf7ff, 0xf7ff, 0xf7ff, 0xfffe, 0xfffe, 0xfffe, 0xf7ff, 0xf7ff
	.hword 0xdf9f, 0xd77f, 0x95ba, 0x8d38, 0x24, 0x4, 0x7cd8, 0x8d5a, 0x959b, 0x7cd6
	.hword 0x18e6, 0x2, 0x64, 0x64, 0x9e9d, 0x961c, 0x86, 0x25, 0x8538, 0x9dfa
	.hword 0xd77f, 0xefff, 0xf7ff, 0xf7fe, 0xf7fe, 0xf7fe, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffff, 0xf7ff, 0xf7ff, 0xf7fe, 0xfffe, 0xfffd, 0xfffe, 0xf7ff, 0xe7bf
	.hword 0x959a, 0x959b, 0x7cd8, 0x8d39, 0x44, 0x24, 0x64, 0x24, 0x3, 0x64
	.hword 0x2, 0x65, 0x7d18, 0x859a, 0x8559, 0x8d9a, 0x5, 0x26, 0x855b, 0x7d1a
	.hword 0x8d5a, 0x9537, 0xf7ff, 0xf7fe, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xf7ff, 0xf7ff, 0xf7fe, 0xfffe, 0xfffd, 0xfffe, 0xf7ff, 0xefdf
	.hword 0x8d18, 0x8d5a, 0x851a, 0x957a, 0x24, 0x3, 0x3, 0x43, 0x2, 0x43
	.hword 0x3, 0x45, 0x855a, 0x857b, 0x7d18, 0x957a, 0x4, 0x26, 0x8d9d, 0x7d3b
	.hword 0x8d5a, 0x8d17, 0xf7ff, 0xf7fe, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff
	.hword 0xf7de, 0xfffe, 0xf7df, 0xffdf, 0xffdf, 0xffdf, 0xfffe, 0xf7ff, 0xf7ff, 0xe7bf
	.hword 0x9558, 0x8d18, 0x46, 0x5, 0x9d79, 0x8d37, 0x8d38, 0x9558, 0x3, 0x3
	.hword 0x8d17, 0x8d59, 0x7d3a, 0x857b, 0x45, 0x4, 0x9559, 0x8d18, 0x855b, 0x8d9b
	.hword 0x24, 0x42, 0xf7df, 0xffff, 0xf7de, 0xffff, 0xffff, 0xf7df, 0xffdf, 0xffdf
	.hword 0xfffe, 0xffde, 0xffdf, 0xffdf, 0xf79e, 0xffdf, 0xffff, 0xf7ff, 0xf7ff, 0xe7bf
	.hword 0xa598, 0x8d17, 0x45, 0x24, 0x9517, 0x8d17, 0x9579, 0x8cd6, 0x3, 0x844
	.hword 0x8cf6, 0x9579, 0x8d7a, 0x8519, 0x4, 0x85, 0x84d6, 0x9d99, 0x8d7a, 0x7cb7
	.hword 0xc4, 0x0, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffdf
	.hword 0xf7be, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x4a49, 0x31e7, 0x9d13, 0x8cd3
	.hword 0x7c71, 0x8cd3, 0x31e8, 0x3209, 0x9536, 0x84b4, 0x7c93, 0x9536, 0x4209, 0x39e8
	.hword 0x8d15, 0x84b4, 0x84b4, 0x8d16, 0x94d5, 0x8473, 0x322a, 0x320a, 0x8495, 0x9d36
	.hword 0x8472, 0x94d2, 0x4228, 0x3a07, 0x94b1, 0x9cf2, 0xef9d, 0xfffe, 0xffdf, 0xffde
	.hword 0xffdf, 0xffdf, 0xf7be, 0xffde, 0xffdf, 0xffff, 0x4a69, 0x4a69, 0x8c91, 0x8cb2
	.hword 0x9d34, 0x94f3, 0x4249, 0x4249, 0x8c93, 0x94f4, 0x9515, 0x8492, 0x4a69, 0x4a8a
	.hword 0x8492, 0x8cd3, 0x94f4, 0x8c72, 0x94b2, 0x94f3, 0x3a4a, 0x428b, 0x8c94, 0x94b3
	.hword 0x9cf3, 0x9cf3, 0x4248, 0x4269, 0x8c92, 0x94d3, 0xf7ff, 0xffff, 0xffdf, 0xfffe
	.hword 0xf7be, 0xef7d, 0xfffe, 0xf7fe, 0x8450, 0x8cd2, 0x7c0f, 0x8471, 0x4249, 0x4a89
	.hword 0x7c0f, 0x8c91, 0x8430, 0x8451, 0x8c92, 0x8471, 0x39e8, 0x4249, 0x8451, 0x8472
	.hword 0x3a6a, 0x3a49, 0x8c71, 0x9471, 0x4228, 0x4a69, 0x7411, 0x8493, 0x4229, 0x4208
	.hword 0x8c71, 0x8430, 0x8492, 0x7410, 0x4aab, 0x31e8, 0x8cb2, 0x8cb2, 0xf7de, 0xf7ff
	.hword 0xfffe, 0xfffe, 0xefbe, 0xf7ff, 0x8c92, 0x8492, 0x8cb2, 0x8c92, 0x39e7, 0x4a69
	.hword 0x8430, 0x8430, 0x94b2, 0x94b2, 0x8450, 0x8cb2, 0x4a49, 0x4a49, 0x8c92, 0x7c52
	.hword 0x324a, 0x3a6a, 0x8c51, 0x9491, 0x4228, 0x4229, 0x84b3, 0x84b3, 0x39e8, 0x4249
	.hword 0x8451, 0x8cb2, 0x8493, 0x8473, 0x3a2a, 0x3209, 0x8472, 0x94f4, 0xefdf, 0xf7ff
	.hword 0xfffe, 0xf7ff, 0x6b8f, 0x6bb0, 0x8cf6, 0x9516, 0x8452, 0x8472, 0x4228, 0x39c7
	.hword 0x528a, 0x4a49, 0x8c51, 0x8430, 0x4268, 0x4227, 0x8c71, 0x7c10, 0x8cb2, 0x8493
	.hword 0x8d37, 0x9537, 0x8c93, 0x8431, 0x8472, 0x8493, 0x9558, 0x8d17, 0x84b3, 0x8c93
	.hword 0x8452, 0x8c93, 0x8cf6, 0x9558, 0x7c94, 0x84b5, 0x9d57, 0x8493, 0x4aab, 0x3a09
	.hword 0xf7fe, 0xf7ff, 0x636e, 0x6370, 0x9d57, 0x9536, 0x8473, 0x8472, 0x4a49, 0x39e7
	.hword 0x4229, 0x39c7, 0x8c92, 0x8c71, 0x4248, 0x4227, 0x8c91, 0x8451, 0x8cb2, 0x7c52
	.hword 0x9557, 0x9d57, 0x8452, 0x8c92, 0x8c92, 0x8472, 0x9537, 0x9537, 0x8473, 0x8472
	.hword 0x8c92, 0x8473, 0x9d58, 0x8cf6, 0x84b5, 0x8494, 0x8cf5, 0xa577, 0x31e9, 0x424a
	.hword 0xfffe, 0xf7ff, 0xf7df, 0xf7ff, 0x3a09, 0x3a08, 0x8431, 0x73cf, 0x7bcf, 0x8430
	.hword 0x3a08, 0x4208, 0x8430, 0x73ae, 0x840f, 0x7bce, 0x4208, 0x4228, 0x7bef, 0x7c10
	.hword 0x4249, 0x3a29, 0x7bf0, 0x7bef, 0x4229, 0x3a08, 0x7bf0, 0x7c10, 0x7bf0, 0x7c10
	.hword 0x4228, 0x4208, 0x424a, 0x39e8, 0x7c31, 0x73cf, 0x6b6e, 0x634d, 0xf7ff, 0xf7ff
	.hword 0xffff, 0xffff, 0xffff, 0xf7be, 0x4a49, 0x4a69, 0x6b8d, 0x8430, 0x8410, 0x73ae
	.hword 0x4a69, 0x4228, 0x7bcf, 0x8410, 0x7bef, 0x7bef, 0x4228, 0x4a69, 0x73ce, 0x73ae
	.hword 0x4248, 0x4208, 0x73ce, 0x7bef, 0x4208, 0x4a69, 0x738e, 0x7c0f, 0x7bef, 0x738e
	.hword 0x4a69, 0x4208, 0x39e7, 0x4a69, 0x8410, 0x738e, 0x8410, 0x73ae, 0xf7be, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7de, 0x7c0f, 0x6b6d, 0x3a07, 0x4248
	.hword 0x7c0f, 0x73ce, 0x4a49, 0x39e7, 0x4208, 0x4228, 0x7c0f, 0x738e, 0x4a69, 0x4248
	.hword 0x7bcf, 0x8410, 0x7bef, 0x7bef, 0x7c0f, 0x73ae, 0x4a69, 0x4208, 0x4228, 0x4a69
	.hword 0x73ce, 0x8410, 0x73ae, 0x6b4d, 0x4208, 0x4a69, 0xf7be, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff, 0x6b8d, 0x6b4d, 0x4228, 0x4a89
	.hword 0x738e, 0x7bef, 0x528a, 0x4228, 0x4a69, 0x4208, 0x7bef, 0x73ae, 0x4a69, 0x4228
	.hword 0x7bcf, 0x7bef, 0x7bef, 0x8410, 0x8430, 0x7bef, 0x4228, 0x39c7, 0x4228, 0x4228
	.hword 0x7bcf, 0x7bef, 0x634c, 0x6b6d, 0x3a07, 0x528a, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff, 0xef9d
	.hword 0x52aa, 0x4208, 0x632c, 0x6b4d, 0x7bef, 0x7bef, 0x4248, 0x4a69, 0x73ae, 0x73ae
	.hword 0x4a49, 0x4228, 0x7bcf, 0x7bef, 0x3a07, 0x4248, 0x4208, 0x4a69, 0x6b6d, 0x634c
	.hword 0x73ae, 0x6b6d, 0xffff, 0xffff, 0xffff, 0xf7be, 0xffff, 0xf7de, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff
	.hword 0x3a07, 0x3a07, 0x73ae, 0x6b6d, 0x8410, 0x7bef, 0x4208, 0x4208, 0x7c0f, 0x8430
	.hword 0x4208, 0x3a07, 0x8410, 0x7bef, 0x4228, 0x4208, 0x4228, 0x4208, 0x6b6d, 0x6b6d
	.hword 0x6b6d, 0x6b6d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	
BrokenAlien2:
	.hword 40, 22, 0xd000
	.hword 0xf7ff, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7ff, 0xf7df, 0xffff
	.hword 0xf7be, 0xfffe, 0xf7de, 0xfffe, 0xffff, 0xf7ff, 0xefff, 0xe7df, 0x8d7a, 0x7cf8
	.hword 0x43, 0x21, 0xf7be, 0xffdf, 0xf7fe, 0xf7fe, 0xf7de, 0xffdf, 0xffdf, 0xffdf
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7fe
	.hword 0xf7ff, 0xf7ff, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff
	.hword 0xf7fe, 0xf7be, 0xf7de, 0xf7ff, 0xdf1c, 0xf7ff, 0xefdf, 0xdf9f, 0x855a, 0x8d7b
	.hword 0x64, 0x1, 0xffdf, 0xf79d, 0xf7fe, 0xf7fe, 0xffff, 0xffdf, 0xffdf, 0xffdf
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7fe
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7de, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xe77e, 0x8a4, 0x2, 0x8d37, 0x959a, 0x751a, 0x8d7c
	.hword 0x4, 0x1, 0xf7ff, 0xffdf, 0xf7fe, 0xf7fe, 0xffdf, 0xffdf, 0xffdf, 0xffdf
	.hword 0xffff, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff
	.hword 0xf7ff, 0xe7be, 0xefdf, 0xcf1d, 0xc5, 0x4, 0x8d59, 0x74d8, 0x8dbd, 0x74fa
	.hword 0xa6, 0x1967, 0xd6fd, 0xf7df, 0xf7ff, 0xfffe, 0xffde, 0xf79d, 0xffdf, 0xffdf
	.hword 0xffdf, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xfffe, 0xf7ff, 0xefde
	.hword 0xf7ff, 0xdf9f, 0xa5d9, 0xae1b, 0x7496, 0x8d59, 0x46, 0x67, 0x7d1b, 0x95bc
	.hword 0x7cb6, 0x7453, 0x10e6, 0x2, 0xf7ff, 0xfffe, 0xfffe, 0xffde, 0xfffe, 0xfffe
	.hword 0xfffe, 0xf7be, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xf7ff, 0xf7ff, 0xf7ff
	.hword 0xefff, 0xe7ff, 0x7cd7, 0x74b7, 0x8dbc, 0x8d7b, 0x6, 0xa8, 0x7cd9, 0x8d7b
	.hword 0x9ddb, 0x8d37, 0x65, 0x2, 0xf7ff, 0xf7ff, 0xffff, 0xfffe, 0xfffe, 0xdefa
	.hword 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xfffe, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xf7ff, 0xf7ff, 0xdf7e
	.hword 0x8d36, 0x8517, 0x19cc, 0x1a2f, 0x7d5c, 0x74fa, 0x8dbc, 0x74d8, 0x2a4e, 0xe8
	.hword 0x4, 0xe7, 0x6c35, 0xa5ba, 0x44, 0x2, 0x1, 0x0, 0x41, 0x18e3
	.hword 0xef9d, 0xfffe, 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff, 0xefff
	.hword 0x9578, 0x8539, 0x11ad, 0x16d, 0x755d, 0x7d7d, 0x7d3b, 0x8d7b, 0x929, 0x21cb
	.hword 0x65, 0x4, 0x9ddc, 0x84f9, 0x25, 0x3, 0x44, 0x43, 0x0, 0x0
	.hword 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7fe, 0xf7de, 0xf7be, 0xf7ff, 0xf7be, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xe7df
	.hword 0x9578, 0x8518, 0x857b, 0x7d5c, 0x755c, 0x755c, 0x857d, 0x853b, 0x957a, 0x8d38
	.hword 0x19c9, 0x1189, 0x8d5a, 0x853a, 0x8539, 0x8d19, 0x9d59, 0x9d37, 0x2187, 0x2986
	.hword 0x0, 0x0, 0xfffe, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xf7df, 0xffdf
	.hword 0xf7de, 0xfffe, 0xffff, 0xf7ff, 0xf7fe, 0xf7ff, 0xef9d, 0xf7ff, 0xf7ff, 0xe7df
	.hword 0x9558, 0x8d38, 0x8d59, 0x8539, 0x857b, 0x7d3a, 0x7d5b, 0x853a, 0x8d18, 0x8d16
	.hword 0x21c8, 0x1168, 0x8d7a, 0x8539, 0x8d5a, 0x957a, 0x8cf8, 0x8cf6, 0x31c8, 0x2124
	.hword 0x841, 0x0, 0xffff, 0xffde, 0xffdf, 0xffdf, 0xffdf, 0xf7de, 0xffdf, 0xffdf
	.hword 0xf7be, 0xfffe, 0xffde, 0xffff, 0xffff, 0xf7fe, 0x39e7, 0x2145, 0x94d3, 0x94d4
	.hword 0x8cb4, 0x84b5, 0x1968, 0x1168, 0x8517, 0x8517, 0x8518, 0x8d18, 0x23, 0x63
	.hword 0x8493, 0x8cd4, 0x8cd6, 0x8cf6, 0x84b5, 0x84b5, 0x2168, 0x31e9, 0x8471, 0x9d13
	.hword 0x9492, 0x9cd3, 0x9492, 0x9d13, 0x8c50, 0x94b2, 0xfffe, 0xfffe, 0xffdf, 0xfffe
	.hword 0xffde, 0xffde, 0xffdf, 0xffff, 0xf7de, 0xf7ff, 0x31a6, 0x2966, 0x8c92, 0x9cf4
	.hword 0x8c93, 0x94d4, 0x31e8, 0x2187, 0x8cd4, 0x84b3, 0x84b4, 0x84b4, 0x1, 0x0
	.hword 0x94b3, 0x9d35, 0x8452, 0x8493, 0x8cf4, 0x8492, 0x29c8, 0x2187, 0x8c91, 0x9d13
	.hword 0x8c72, 0x94d4, 0x94b2, 0x94f3, 0x8cb2, 0x94d3, 0xf7ff, 0xf7be, 0xffff, 0xfffe
	.hword 0xf7bd, 0xffde, 0xffdf, 0xf7be, 0x94d3, 0x94d3, 0x18e4, 0x31a7, 0x8c93, 0x8c72
	.hword 0x0, 0x841, 0x73ae, 0x8c71, 0x8c51, 0x94b2, 0x3186, 0x39c7, 0x8c91, 0x9492
	.hword 0x0, 0x1, 0x4209, 0x3186, 0x31a6, 0x29a5, 0x8471, 0x7410, 0x39e6, 0x2944
	.hword 0x39a7, 0x2967, 0x2987, 0x1925, 0x8cb3, 0x8472, 0x2145, 0x31c7, 0xf7ff, 0xf7ff
	.hword 0xfffe, 0xfffe, 0xf7ff, 0xef9e, 0x94d4, 0x7c32, 0x2188, 0x2147, 0x8493, 0x7c51
	.hword 0x0, 0x0, 0x8c50, 0xa554, 0x7bee, 0x8c71, 0x2944, 0x3165, 0x8c51, 0x8c71
	.hword 0x42, 0x1, 0x31a7, 0x2124, 0x2964, 0x1944, 0x9514, 0x8492, 0x29a6, 0x2124
	.hword 0x3186, 0x2946, 0x2988, 0x2188, 0x84b4, 0x8472, 0x2166, 0x3a08, 0xe75d, 0xf7ff
	.hword 0xf7ff, 0xe77d, 0x73cf, 0x6bd0, 0x84b4, 0x9d57, 0x84b5, 0x7c94, 0x9537, 0x9d56
	.hword 0x84b3, 0x8491, 0x8cb2, 0x7bee, 0x39c7, 0x2965, 0x9491, 0x8c51, 0x29a7, 0x2188
	.hword 0x84f6, 0x9d78, 0x7c32, 0x8c93, 0x8cb3, 0x8473, 0x9537, 0x84d6, 0x8493, 0x8cb2
	.hword 0x8c71, 0x8c93, 0x9536, 0x8d17, 0x7c95, 0x7453, 0x9d77, 0x8cf5, 0x73f0, 0x638f
	.hword 0xf7ff, 0xf7ff, 0x636d, 0x636e, 0x9d77, 0x9516, 0x7c94, 0x7c74, 0x9557, 0x8cf5
	.hword 0x8493, 0x7c51, 0x8cb2, 0x8450, 0x31a6, 0x2945, 0x8c51, 0x8c71, 0x2166, 0x21a8
	.hword 0x8d36, 0x9d97, 0x7c52, 0x8c93, 0x8452, 0x8c93, 0x8cf7, 0x9d78, 0x8493, 0x7c51
	.hword 0x94b2, 0x8451, 0x9516, 0x9537, 0x8495, 0x7c74, 0x9d56, 0x9515, 0x6baf, 0x636e
	.hword 0xf7de, 0xf7ff, 0xf7be, 0xf7ff, 0x2145, 0x2145, 0x8452, 0x73d0, 0x2966, 0x2165
	.hword 0x8451, 0x73cf, 0x20, 0x0, 0x2965, 0x3186, 0x7bcf, 0x7bef, 0x7bef, 0x73cf
	.hword 0x7c10, 0x7c10, 0x73cf, 0x7bf0, 0x0, 0x0, 0x7c11, 0x7c11, 0x73cf, 0x8410
	.hword 0x73ce, 0x7bf0, 0x2986, 0x2125, 0x31a7, 0x2986, 0x5b2d, 0x634d, 0xf7ff, 0xf7ff
	.hword 0xffff, 0xffff, 0xffff, 0xef7d, 0x3186, 0x39e7, 0x632c, 0x8c51, 0x31c6, 0x2945
	.hword 0x7c0f, 0x6b8d, 0x841, 0x20, 0x2945, 0x2945, 0x8430, 0x73ae, 0x8450, 0x8430
	.hword 0x738e, 0x7bef, 0x8410, 0x7c0f, 0x0, 0x841, 0x6b8d, 0x8430, 0x7bef, 0x73ae
	.hword 0x8410, 0x7bef, 0x2985, 0x2985, 0x2985, 0x2945, 0x7bcf, 0x7bef, 0xef9d, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0x39e7, 0x2945, 0x2945, 0x2965
	.hword 0x7bef, 0x94b2, 0x632c, 0x7bcf, 0x8430, 0x8430, 0x2965, 0x3186, 0x73ae, 0x73ce
	.hword 0x31a6, 0x2945, 0x31a6, 0x2945, 0x8430, 0x738e, 0x8450, 0x73ce, 0x39c7, 0x3186
	.hword 0x8410, 0x7bcf, 0x6b6d, 0x6b8d, 0x632c, 0x73ae, 0xf7be, 0xf7de, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff, 0x31a6, 0x2965, 0x2124, 0x4a49
	.hword 0x632c, 0x8410, 0x8410, 0x8430, 0x73ae, 0x7bef, 0x2945, 0x39e7, 0x73ae, 0x7bef
	.hword 0x31a6, 0x18e3, 0x39c7, 0x2965, 0x7bcf, 0x8410, 0x7bef, 0x6b6d, 0x31a6, 0x2124
	.hword 0x73ce, 0x8410, 0x6b6d, 0x6b6d, 0x634c, 0x7bcf, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xf7de, 0xffff, 0xef9d, 0xffff, 0xffff, 0xef7d
	.hword 0x39e7, 0x2965, 0x6b6d, 0x6b6d, 0x31c6, 0x2965, 0x8410, 0x738e, 0x39c7, 0x31a6
	.hword 0x2124, 0x3186, 0x7bef, 0x7bef, 0x7bef, 0x7c0f, 0x3186, 0x31a6, 0x73ae, 0x6b4d
	.hword 0x39c7, 0x2945, 0xffff, 0xffff, 0xffff, 0xef9d, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff
	.hword 0x2965, 0x2104, 0x73ae, 0x632c, 0x2965, 0x2965, 0x7bcf, 0x7bef, 0x2945, 0x2965
	.hword 0x31a6, 0x31a6, 0x7c0f, 0x7bef, 0x7bef, 0x8410, 0x2965, 0x2124, 0x6b6d, 0x6b6d
	.hword 0x2945, 0x31a6, 0xf7de, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	
BrokenAlien3:
		.hword 40, 22, 0xd000
	.hword 0xffdf, 0xffdf, 0xffde, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xf7ff, 0xffdf, 0xffde
	.hword 0xffdf, 0xffdf, 0xfffe, 0xf7fe, 0xf7ff, 0xefff, 0xe7df, 0xe7df, 0x9559, 0x8d39
	.hword 0x4, 0x66, 0x7d19, 0x8d9a, 0xdfff, 0xe7ff, 0xf7fe, 0xffde, 0xffdf, 0xffdf
	.hword 0xf7de, 0xf7fe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffdf, 0xffde, 0xffdf, 0xffdf, 0xffdf, 0xf7ff, 0xf7ff, 0xffff, 0xffdf
	.hword 0xffdf, 0xffdf, 0xf7ff, 0xf7ff, 0xe7bf, 0xe7ff, 0xefff, 0xdfdf, 0x8d18, 0x8518
	.hword 0xa7, 0x87, 0x7d7a, 0x7538, 0xd7ff, 0xd7bf, 0xf7ff, 0xf7fe, 0xffdf, 0xffdf
	.hword 0xf7ff, 0xf7fe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffdf, 0xfffe, 0xfffe, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7de, 0xfffe
	.hword 0xffff, 0xf7ff, 0xf7ff, 0xe7df, 0x9599, 0x8d38, 0x8d37, 0x9d99, 0x96a, 0x1a2d
	.hword 0x6cd8, 0x6d19, 0x96df, 0x96be, 0x967b, 0xa6bb, 0xe7ff, 0xf7fe, 0xf7ff, 0xf7de
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffdf, 0xfffe, 0xf7fe, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7fe, 0xfffe, 0xf7fe
	.hword 0xf7ff, 0xf7ff, 0xdfbf, 0xd79f, 0x8d9b, 0x8d5b, 0x8d59, 0x84f8, 0x19cc, 0x16b
	.hword 0x85bc, 0x861d, 0x7dfc, 0x8e9d, 0x8e5b, 0x9e7a, 0xdfdf, 0xf7ff, 0xf7fe, 0xf7fe
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffdf, 0xfffe, 0xf7fe, 0xf7ff, 0xf7ff, 0xfffe, 0xfffe, 0xf7de, 0xf7fe
	.hword 0xefff, 0xdfbf, 0x9dd9, 0x8d9a, 0x74fa, 0x7d1b, 0x47, 0x67, 0x7d19, 0x857b
	.hword 0x753b, 0x6d3a, 0x7ddc, 0x7599, 0xd7ff, 0xd7df, 0xefff, 0xf7ff, 0xfffe, 0xfffe
	.hword 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffdf, 0xfffe, 0xf7ff, 0xf7ff, 0xf7ff, 0xfffe, 0xfffe, 0xf7fe, 0xf7ff
	.hword 0xefdf, 0xe7ff, 0x7d17, 0x6cb8, 0x8dbe, 0x8d7d, 0x7, 0x67, 0x8539, 0x8d9b
	.hword 0x859c, 0x7d5b, 0x7d9a, 0x7538, 0xd7df, 0xd77f, 0xf7ff, 0xffdf, 0xfffe, 0xfffd
	.hword 0xf7de, 0xf7df, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xffff, 0xf7ff, 0xf7ff, 0xffdf, 0xfffe, 0xfffe, 0xf7fe, 0xe79e
	.hword 0x9577, 0x8d38, 0x19cc, 0x1a0e, 0x7d1b, 0x7cfa, 0x8d5b, 0x7cf8, 0x19ec, 0x14a
	.hword 0x7d1a, 0x95bc, 0xc75f, 0xdfff, 0x8d57, 0xa597, 0xefbf, 0xffdf, 0xfffe, 0xfffe
	.hword 0xf7fe, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xffff, 0xf7ff, 0xf7ff, 0xffdf, 0xffdf, 0xfffe, 0xfffe, 0xf7ff, 0xefff
	.hword 0x8d58, 0x8d39, 0x98b, 0x98b, 0x8d5b, 0x855a, 0x8539, 0x959a, 0x949, 0x220c
	.hword 0x8559, 0x7d18, 0xe7ff, 0xd79f, 0x9536, 0x9d56, 0xef9e, 0xf7ff, 0xf7de, 0xf7fe
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffdf, 0xf7be, 0xfffe, 0xf7de, 0xf7ff, 0xe7df
	.hword 0x8d58, 0x8519, 0x8d9a, 0x8d59, 0x21cb, 0x1168, 0x23, 0x23, 0x9579, 0x9558
	.hword 0x24, 0x24, 0x8d57, 0x9557, 0xdf9f, 0xefff, 0xefde, 0xf7ff, 0xf7ff, 0xf7de
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7df, 0xf7ff, 0xf7ff, 0xf7df, 0xffdf, 0xffdf, 0xf7de, 0xf7ff, 0xf7ff, 0xe7df
	.hword 0x9dba, 0x8d59, 0x8517, 0x7494, 0x29ea, 0x2188, 0x22, 0x63, 0x8cf6, 0x84b5
	.hword 0x84, 0x63, 0x8d16, 0x9d56, 0xefff, 0xe7df, 0xeffe, 0xefde, 0xf7ff, 0xf7ff
	.hword 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffdf, 0xfffe, 0xfffe, 0xfffe, 0xffde, 0x94b1, 0x9492, 0x1, 0x42
	.hword 0x7453, 0x84d6, 0x8cf5, 0xa5b8, 0x1905, 0x2966, 0x94d3, 0x7c30, 0xa556, 0xa536
	.hword 0x7c32, 0x8472, 0xf7ff, 0xefbf, 0xefbf, 0xe79d, 0xf7fe, 0xf7fe, 0xffdf, 0xffdf
	.hword 0xffdf, 0xffde, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffdf, 0xfffe, 0xfffe, 0xef9d, 0xfffe, 0x94b1, 0x9cd2, 0x0, 0x1
	.hword 0x84b3, 0x8d15, 0x7c52, 0x8cd3, 0x2966, 0x31a7, 0x8c91, 0xa534, 0x8c51, 0x8431
	.hword 0xa556, 0x94d3, 0xffdf, 0xffdf, 0xffff, 0xf7ff, 0xefbe, 0xef9d, 0xffdf, 0xf79e
	.hword 0xffde, 0xffde, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffdf, 0xfffe, 0xf7fe, 0x9cf3, 0x8410, 0x20, 0x0, 0x9492, 0x8c51
	.hword 0x31c7, 0x2986, 0x40, 0x0, 0x8c72, 0x8451, 0x8c71, 0x8450, 0x841, 0x1
	.hword 0x7c11, 0x8c72, 0xf7df, 0xffdf, 0xffdf, 0xef9e, 0x31c7, 0x29a7, 0x8c72, 0x9d14
	.hword 0xfffe, 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffde, 0xffdf, 0xefbe, 0xe79d, 0x9515, 0x7411, 0x862, 0x0, 0x8c91, 0x840f
	.hword 0x39c7, 0x2945, 0x20, 0x0, 0x8cd4, 0x8493, 0x94f3, 0x7c0f, 0x21, 0x1
	.hword 0x8452, 0x9515, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0x2187, 0x29a8, 0x73af, 0x8c92
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xefbd, 0x73f0, 0x6bf1, 0x84b5, 0x9d78, 0x7c32, 0x8c72, 0x0, 0x0
	.hword 0x8c30, 0x9492, 0x8472, 0x84b3, 0x8d36, 0x8d36, 0x1105, 0x4249, 0x7c31, 0x7c72
	.hword 0x9d98, 0x8cf6, 0xe7bf, 0xf7ff, 0xefdf, 0xf7ff, 0x8cf6, 0x8cb5, 0x426b, 0x2145
	.hword 0x31a7, 0x2165, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xf7ff, 0x634e, 0x5b4f, 0x9537, 0x9d58, 0x7c52, 0x8c92, 0x0, 0x0
	.hword 0x9471, 0x8c71, 0x8452, 0x8493, 0x8d16, 0x9d77, 0x29a7, 0x2145, 0x8c92, 0x8cb3
	.hword 0x8d16, 0x9d57, 0xefff, 0xefff, 0xf7ff, 0xe77e, 0xa5b8, 0x9516, 0x2126, 0x29a7
	.hword 0x2966, 0x2966, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xf7de, 0xf7ff, 0xf7ff, 0x634e, 0x636e, 0x0, 0x0, 0x7bef, 0x7bef
	.hword 0x31a6, 0x2124, 0x8410, 0x7c10, 0x2125, 0x29a7, 0x7c10, 0x73cf, 0x31a7, 0x2986
	.hword 0x2966, 0x29a7, 0x73ef, 0x7c10, 0x7c10, 0x73cf, 0x2987, 0x2125, 0x8451, 0x73ae
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xef9d, 0x7bef, 0x73ae, 0x0, 0x0, 0x8410, 0x6b8d
	.hword 0x31a6, 0x31a6, 0x73ae, 0x7bef, 0x31a6, 0x2965, 0x7bcf, 0x8430, 0x2124, 0x2965
	.hword 0x31a6, 0x2965, 0x8410, 0x7bef, 0x7c0f, 0x6b6d, 0x4a49, 0x2104, 0x8430, 0x8430
	.hword 0xef9d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7be, 0xffff, 0xffff, 0xffff, 0xf7de, 0xf7de, 0x738e, 0x6b4d, 0x2965, 0x31c6
	.hword 0x2144, 0x31a6, 0x39c7, 0x2965, 0x0, 0x0, 0x7bef, 0x8410, 0x0, 0x20
	.hword 0x2945, 0x2945, 0x8410, 0x7bef, 0x0, 0x861, 0x6b4d, 0x7bef, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xf7de, 0xffff, 0xffff, 0xf7de, 0x7c0f, 0x6b4d, 0x2945, 0x4228
	.hword 0x18c3, 0x2945, 0x2965, 0x2124, 0x0, 0x0, 0x8410, 0x6b6d, 0x861, 0x0
	.hword 0x2124, 0x39e7, 0x6b8d, 0x7c0f, 0x0, 0x0, 0x7bef, 0x94d2, 0xef9d, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7de, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xffff, 0xffff, 0xef9d
	.hword 0x4228, 0x39c7, 0x6b6d, 0x6b6d, 0x2985, 0x2965, 0x0, 0x861, 0x6b6d, 0x7bcf
	.hword 0x8410, 0x738e, 0x841, 0x0, 0x39c7, 0x2965, 0x8410, 0x632c, 0x39c7, 0x31a6
	.hword 0x6b4d, 0x73ce, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0x2945, 0x18e3, 0x6b6d, 0x73ae, 0x2965, 0x31a6, 0x0, 0x0, 0x8c51, 0x8430
	.hword 0x7c0f, 0x8430, 0x0, 0x0, 0x2945, 0x2965, 0x8430, 0x8410, 0x2965, 0x2104
	.hword 0x6b6d, 0x634c, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff

BrokenAlien4:
	.hword 40, 22, 0xd000
	.hword 0xffff, 0xfffe, 0xffde, 0xffde, 0xfffe, 0xf7fe, 0xf7fe, 0xf7fe, 0xffdf, 0xffde
	.hword 0xffde, 0xfffe, 0xfffe, 0xf7fe, 0xf7ff, 0xffff, 0xfffe, 0xfffe, 0xffdf, 0xffdf
	.hword 0xffff, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7fe, 0xf7fe, 0xffdf, 0xffdf
	.hword 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffde, 0xffde, 0xfffe, 0xf7fe, 0xf7fe, 0xf7fe, 0xffff, 0xfffe
	.hword 0xfffe, 0xf7fe, 0xf7fe, 0xf7fe, 0xf7de, 0xf7ff, 0xf7de, 0xfffe, 0xffdf, 0xffdf
	.hword 0xffff, 0xf7ff, 0xf7df, 0xffdf, 0xffdf, 0xffff, 0xfffe, 0xfffe, 0xffdf, 0xffdf
	.hword 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7ff, 0xf7ff, 0xffdf, 0xffdf, 0xffff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xf7de
	.hword 0xf7fe, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xefde, 0xf7df, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffdf, 0xffdf, 0xfffe, 0xfffe, 0xfffe, 0xffdf, 0xffdf
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffdf, 0xffdf, 0xf7ff, 0xf7ff, 0xf7ff, 0xfffe, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xe79e, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xefbf, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffdf, 0xffde, 0xffde, 0xffde, 0xffdf, 0xffdf, 0xffdf
	.hword 0xf7ff, 0xf7fe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xfffe, 0xfffe, 0xf7ff
	.hword 0x42, 0x2, 0x8cf5, 0xa5b7, 0xe75e, 0xf7ff, 0xf7ff, 0xefdf, 0x9515, 0x9d55
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xfffe, 0xffde, 0xffde, 0xffdf, 0xffdf, 0xffdf
	.hword 0xf7fe, 0xf7fe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffdf, 0xffde, 0xfffe, 0xf7ff, 0xefff
	.hword 0x2, 0xc6, 0x84d6, 0x9557, 0xf7ff, 0xf7df, 0xf7ff, 0xdf5d, 0xadd7, 0x9d35
	.hword 0xefde, 0xf7ff, 0xf7ff, 0xf7de, 0xffff, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff
	.hword 0xf7fe, 0xf7fe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xf7fe, 0xf7fe, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xf7ff, 0xefff
	.hword 0x84f7, 0x7cd7, 0x21cc, 0x1128, 0xf7ff, 0xf7ff, 0x0, 0x882, 0xe75d, 0xefdf
	.hword 0xf7ff, 0xefde, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xffdf, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xffff, 0xf7fe, 0xf7fe, 0xf7fe, 0xfffe, 0xfffe, 0xfffe, 0xf7ff, 0xe7bf
	.hword 0x9559, 0x8d5a, 0x19ac, 0x196a, 0xefff, 0xf7ff, 0x20, 0x0, 0xf7ff, 0xf7de
	.hword 0xefff, 0xf7ff, 0xe7bf, 0xefff, 0xf7ff, 0xf7ff, 0xf7ff, 0xffff, 0xfffe, 0xfffe
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffdf, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7fe, 0xfffe, 0xfffe, 0xf7fe, 0xf7ff, 0xefff
	.hword 0x8d59, 0x8519, 0x8d5a, 0x8cf7, 0xefff, 0xf7ff, 0xffdf, 0xffdf, 0xf7fe, 0xf7ff
	.hword 0xf7ff, 0xefff, 0x9d35, 0x9d35, 0xefdf, 0xf7ff, 0xf7ff, 0xf7fe, 0xfffe, 0xfffe
	.hword 0xf7be, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xfffe, 0xfffe, 0xf7fe, 0xf7ff, 0xe7df
	.hword 0x9578, 0x84f7, 0x9579, 0x9d78, 0xefdf, 0xf7ff, 0xffdf, 0xffdf, 0xfffe, 0xefbd
	.hword 0xf7ff, 0xf7ff, 0x8cf3, 0x9d56, 0xf7ff, 0xf7ff, 0xf7fe, 0xf7fe, 0xfffe, 0xf7de
	.hword 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xf7de, 0xf7ff, 0xf7ff, 0xffff, 0xffdf, 0x9cd2, 0x8c50, 0x0, 0x22
	.hword 0x8493, 0x9536, 0x2, 0x1, 0x94d3, 0x94d2, 0xffdf, 0xef9e, 0xf7fe, 0xf7fe
	.hword 0xf7de, 0xf7ff, 0xf7ff, 0xefbf, 0x8492, 0x9d13, 0xf7de, 0xf7fe, 0xfffe, 0xffde
	.hword 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xf7de, 0xf7ff, 0xffff, 0xf7be, 0xffdf, 0xa4f3, 0x9cd3, 0x0, 0x0
	.hword 0x8cb3, 0x9514, 0x1, 0x42, 0x8c92, 0x94d3, 0xf7ff, 0xf7ff, 0xefbe, 0xf7de
	.hword 0xf7ff, 0xef9e, 0xf7ff, 0xf7ff, 0x9d34, 0x7c30, 0xf7ff, 0xf7fe, 0xfffe, 0xfffe
	.hword 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xfffe, 0xfffe, 0xffff, 0xffdf, 0xa514, 0x8c50, 0x2965, 0x2945, 0x8c92, 0x8451
	.hword 0x31c7, 0x2965, 0x8c92, 0x8c71, 0x2966, 0x2987, 0xf7ff, 0xf7ff, 0x41, 0x20
	.hword 0xffff, 0xffdf, 0xf7be, 0xf7ff, 0x0, 0x21, 0xf7ff, 0xf7ff, 0xf7de, 0xf7ff
	.hword 0xf7ff, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7fe, 0xfffe, 0xffff, 0xffde, 0x9491, 0x6b6d, 0x4208, 0x2986, 0x8452, 0x8c93
	.hword 0x2987, 0x2986, 0x94b2, 0x8451, 0x29a8, 0x2147, 0xf7ff, 0xf7ff, 0x0, 0x0
	.hword 0xf7be, 0xffdf, 0xffff, 0xf7ff, 0x0, 0x882, 0xe77e, 0xf7ff, 0xf7ff, 0xf7ff
	.hword 0xf7df, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7fe, 0xf7de, 0x73ae, 0x6b8d, 0x2965, 0x3a28, 0x7c30, 0x8492, 0x9536, 0x9516
	.hword 0x8c94, 0x8452, 0x2145, 0x2987, 0x9557, 0x9557, 0xe79e, 0xfffe, 0xfffe, 0xffde
	.hword 0xffdf, 0xffdf, 0xfffe, 0xf7ff, 0xf7ff, 0xcedc, 0xb5f9, 0x9536, 0xe79f, 0xf7ff
	.hword 0xf7ff, 0xf7de, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7fe, 0xf7ff, 0x632c, 0x6b8d, 0x2944, 0x2985, 0x8471, 0x84b3, 0x9536, 0x9d57
	.hword 0x7c52, 0x8c93, 0x2987, 0x2187, 0x9d78, 0x8d16, 0xf7ff, 0xfffe, 0xfffe, 0xffde
	.hword 0xffdf, 0xffdf, 0xffde, 0xf7ff, 0xf7ff, 0xf7ff, 0x94f5, 0x8cd5, 0xf7ff, 0xefbf
	.hword 0xf7ff, 0xf7fe, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7ff, 0xf7de, 0xffff, 0xffff, 0x632c, 0x6b6d, 0x8430, 0x73cf, 0x29a7, 0x2145
	.hword 0x7bf0, 0x7c10, 0x0, 0x0, 0x8c92, 0x6baf, 0x0, 0x0, 0x840f, 0x73ae
	.hword 0xffdf, 0xffdf, 0x3186, 0x2965, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xf7be, 0x73ae, 0x73ce, 0x634c, 0x8410, 0x2965, 0x31a6
	.hword 0x8410, 0x632c, 0x841, 0x0, 0x6b6d, 0x8450, 0x0, 0x20, 0x7bcf, 0x8430
	.hword 0xffff, 0xef9d, 0x4208, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7de, 0x7bcf, 0x6b6d, 0x0, 0x0
	.hword 0x2945, 0x4228, 0x6b8d, 0x8430, 0x8410, 0x7bcf, 0x8430, 0x73ce, 0x0, 0x0
	.hword 0x73ae, 0x8c71, 0xf7de, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x7bcf, 0x632c, 0x0, 0x1082
	.hword 0x18c3, 0x4208, 0x6b8d, 0x7c0f, 0x7c0f, 0x7bef, 0x73ae, 0x7bef, 0x0, 0x10a2
	.hword 0x6b6d, 0x7bcf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xf7de, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf7be, 0xffff, 0xffff, 0xf7de
	.hword 0x8410, 0x5acb, 0x861, 0x0, 0x6b6d, 0x8450, 0x20, 0x841, 0x73ae, 0x6b6d
	.hword 0x8450, 0x7bcf, 0x20, 0x0, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0x6b6d, 0x632c, 0x20, 0x0, 0x8430, 0x73ce, 0x0, 0x0, 0x8c71, 0x7bcf
	.hword 0x7c0f, 0x8450, 0x0, 0x0, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
	.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
